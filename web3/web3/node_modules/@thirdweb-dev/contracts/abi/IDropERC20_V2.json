{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"proofs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proofMaxQuantityPerTransaction","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setClaimConditions","inputs":[{"name":"phases","type":"tuple[]","internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetClaimEligibility","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ClaimConditionsUpdated","inputs":[{"name":"claimConditions","type":"tuple[]","indexed":false,"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]}],"anonymous":false},{"type":"event","name":"ContractURIUpdated","inputs":[{"name":"prevURI","type":"string","indexed":false,"internalType":"string"},{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"MaxTotalSupplyUpdated","inputs":[{"name":"maxTotalSupply","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MaxWalletClaimCountUpdated","inputs":[{"name":"count","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimConditionIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WalletClaimCountUpdated","inputs":[{"name":"wallet","type":"address","indexed":true,"internalType":"address"},{"name":"count","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claim(address,uint256,address,uint256,bytes32[],uint256)":"7a5a8e7e","setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":"e23b8164","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MaxWalletClaimCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"WalletClaimCountUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityPerTransaction\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"phases\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[])\":{\"details\":\"Emitted when new claim conditions are set.\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"MaxTotalSupplyUpdated(uint256)\":{\"details\":\"Emitted when the global max supply of tokens is updated.\"},\"MaxWalletClaimCountUpdated(uint256)\":{\"details\":\"Emitted when the global max wallet claim count is updated.\"},\"TokensClaimed(uint256,address,address,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"WalletClaimCountUpdated(address,uint256)\":{\"details\":\"Emitted when the wallet claim count for an address is updated.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"claim(address,uint256,address,uint256,bytes32[],uint256)\":{\"params\":{\"currency\":\"The currency in which to pay for the claim.\",\"pricePerToken\":\"The price per token (i.e. price per 1 ether unit of the token)                                         to pay for the claim.\",\"proofMaxQuantityPerTransaction\":\"(Optional) The maximum number of tokens an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of tokens to claim.\",\"receiver\":\"The receiver of the tokens to claim.\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)\":{\"params\":{\"phases\":\"Claim conditions in ascending order by `startTimestamp`.\",\"resetClaimEligibility\":\"Whether to reset `limitLastClaimTimestamp` and                               `limitMerkleProofClaim` values when setting new                               claim conditions.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,address,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of tokens.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"notice\":\"Thirdweb's 'Drop' contracts are distribution mechanisms for tokens. The  `DropERC20` contract is a distribution mechanism for ERC20 tokens.  A contract admin (i.e. holder of `DEFAULT_ADMIN_ROLE`) can create claim conditions  with non-overlapping time windows, and accounts can claim the tokens according to  restrictions defined in the claim condition that is active at the time of the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/interface/drop/IDropERC20_V2.sol\":\"IDropERC20_V2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol\":{\"keccak256\":\"0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3\",\"dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr\"]},\"contracts/legacy-contracts/interface/drop/IDropERC20_V2.sol\":{\"keccak256\":\"0x650e674408c7f34bd83a38479f2fc56b2501bda7d9b62b4c174565be8d6cdbe9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://373c6cb6983d94c92abf3cc47b677ede94638ada4663385f932aba6072e07efe\",\"dweb:/ipfs/QmSxUitgtfuLztV3TW6CWRmQDzYj271snVseFBndzjDkde\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol\":{\"keccak256\":\"0x07aab61872a5dd56d876a8d8f82f4cc063e74d16ec9f1eff100fcaee423b5de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399cf9ed2bce652a340c0336a2a426c88ad593aa989b4bb239d0ba44385d66a4\",\"dweb:/ipfs/QmVCKpLx1qJ16iMvjA2ZLT2b9iGRq3ybVQN3RxoUgwMwxn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","name":"claimConditions","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}],"indexed":false}],"type":"event","name":"ClaimConditionsUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"prevURI","type":"string","indexed":false},{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"ContractURIUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"maxTotalSupply","type":"uint256","indexed":false}],"type":"event","name":"MaxTotalSupplyUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"count","type":"uint256","indexed":false}],"type":"event","name":"MaxWalletClaimCountUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"claimConditionIndex","type":"uint256","indexed":true},{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"wallet","type":"address","indexed":true},{"internalType":"uint256","name":"count","type":"uint256","indexed":false}],"type":"event","name":"WalletClaimCountUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityPerTransaction","type":"uint256"}],"stateMutability":"payable","type":"function","name":"claim"},{"inputs":[{"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","name":"phases","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}]},{"internalType":"bool","name":"resetClaimEligibility","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setClaimConditions"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"claim(address,uint256,address,uint256,bytes32[],uint256)":{"params":{"currency":"The currency in which to pay for the claim.","pricePerToken":"The price per token (i.e. price per 1 ether unit of the token)                                         to pay for the claim.","proofMaxQuantityPerTransaction":"(Optional) The maximum number of tokens an address included in an                                        allowlist can claim.","proofs":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","quantity":"The quantity of tokens to claim.","receiver":"The receiver of the tokens to claim."}},"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":{"params":{"phases":"Claim conditions in ascending order by `startTimestamp`.","resetClaimEligibility":"Whether to reset `limitLastClaimTimestamp` and                               `limitMerkleProofClaim` values when setting new                               claim conditions."}},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,address,uint256,bytes32[],uint256)":{"notice":"Lets an account claim a given quantity of tokens."},"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/interface/drop/IDropERC20_V2.sol":"IDropERC20_V2"},"libraries":{}},"sources":{"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol":{"keccak256":"0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a","urls":["bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3","dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr"],"license":"Apache-2.0"},"contracts/legacy-contracts/interface/drop/IDropERC20_V2.sol":{"keccak256":"0x650e674408c7f34bd83a38479f2fc56b2501bda7d9b62b4c174565be8d6cdbe9","urls":["bzz-raw://373c6cb6983d94c92abf3cc47b677ede94638ada4663385f932aba6072e07efe","dweb:/ipfs/QmSxUitgtfuLztV3TW6CWRmQDzYj271snVseFBndzjDkde"],"license":"Apache-2.0"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f","urls":["bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f","dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol":{"keccak256":"0x07aab61872a5dd56d876a8d8f82f4cc063e74d16ec9f1eff100fcaee423b5de9","urls":["bzz-raw://399cf9ed2bce652a340c0336a2a426c88ad593aa989b4bb239d0ba44385d66a4","dweb:/ipfs/QmVCKpLx1qJ16iMvjA2ZLT2b9iGRq3ybVQN3RxoUgwMwxn"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/interface/drop/IDropERC20_V2.sol","id":58272,"exportedSymbols":{"BitMapsUpgradeable":[165227],"IDropClaimCondition_V2":[58082],"IDropERC20_V2":[58271],"IERC20Upgradeable":[156641]},"nodeType":"SourceUnit","src":"39:3207:282","nodes":[{"id":58194,"nodeType":"PragmaDirective","src":"39:24:282","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":58195,"nodeType":"ImportDirective","src":"87:79:282","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","nameLocation":"-1:-1:-1","scope":58272,"sourceUnit":156642,"symbolAliases":[],"unitAlias":""},{"id":58196,"nodeType":"ImportDirective","src":"167:38:282","nodes":[],"absolutePath":"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol","file":"./IDropClaimCondition_V2.sol","nameLocation":"-1:-1:-1","scope":58272,"sourceUnit":58083,"symbolAliases":[],"unitAlias":""},{"id":58271,"nodeType":"ContractDefinition","src":"634:2611:282","nodes":[{"id":58212,"nodeType":"EventDefinition","src":"755:171:282","nodes":[],"anonymous":false,"documentation":{"id":58202,"nodeType":"StructuredDocumentation","src":"709:41:282","text":"@dev Emitted when tokens are claimed."},"eventSelector":"9c4945d842cc8c6704877a0defcd9ab09f6d77b24a369a95c2610506c6c38ee7","name":"TokensClaimed","nameLocation":"761:13:282","parameters":{"id":58211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58204,"indexed":true,"mutability":"mutable","name":"claimConditionIndex","nameLocation":"800:19:282","nodeType":"VariableDeclaration","scope":58212,"src":"784:35:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58203,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58206,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"845:7:282","nodeType":"VariableDeclaration","scope":58212,"src":"829:23:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58205,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:282","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58208,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"878:8:282","nodeType":"VariableDeclaration","scope":58212,"src":"862:24:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58207,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:282","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58210,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"904:15:282","nodeType":"VariableDeclaration","scope":58212,"src":"896:23:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58209,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"774:151:282"}},{"id":58219,"nodeType":"EventDefinition","src":"988:63:282","nodes":[],"anonymous":false,"documentation":{"id":58213,"nodeType":"StructuredDocumentation","src":"932:51:282","text":"@dev Emitted when new claim conditions are set."},"eventSelector":"22ddd1bcb3816651679299dbffccb94973edec10c32e88dc2f4735c7699a02ca","name":"ClaimConditionsUpdated","nameLocation":"994:22:282","parameters":{"id":58218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58217,"indexed":false,"mutability":"mutable","name":"claimConditions","nameLocation":"1034:15:282","nodeType":"VariableDeclaration","scope":58219,"src":"1017:32:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_memory_ptr_$dyn_memory_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"},"typeName":{"baseType":{"id":58215,"nodeType":"UserDefinedTypeName","pathNode":{"id":58214,"name":"ClaimCondition","nameLocations":["1017:14:282"],"nodeType":"IdentifierPath","referencedDeclaration":58059,"src":"1017:14:282"},"referencedDeclaration":58059,"src":"1017:14:282","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58059_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition"}},"id":58216,"nodeType":"ArrayTypeName","src":"1017:16:282","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_storage_$dyn_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"}},"visibility":"internal"}],"src":"1016:34:282"}},{"id":58224,"nodeType":"EventDefinition","src":"1127:52:282","nodes":[],"anonymous":false,"documentation":{"id":58220,"nodeType":"StructuredDocumentation","src":"1057:65:282","text":"@dev Emitted when the global max supply of tokens is updated."},"eventSelector":"f2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af","name":"MaxTotalSupplyUpdated","nameLocation":"1133:21:282","parameters":{"id":58223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58222,"indexed":false,"mutability":"mutable","name":"maxTotalSupply","nameLocation":"1163:14:282","nodeType":"VariableDeclaration","scope":58224,"src":"1155:22:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1154:24:282"}},{"id":58231,"nodeType":"EventDefinition","src":"1261:69:282","nodes":[],"anonymous":false,"documentation":{"id":58225,"nodeType":"StructuredDocumentation","src":"1185:71:282","text":"@dev Emitted when the wallet claim count for an address is updated."},"eventSelector":"8973b95d42472e89416ea69404f8038c041db700af9ec294e7b4cd4e1ff2801c","name":"WalletClaimCountUpdated","nameLocation":"1267:23:282","parameters":{"id":58230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58227,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1307:6:282","nodeType":"VariableDeclaration","scope":58231,"src":"1291:22:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58226,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:282","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58229,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"1323:5:282","nodeType":"VariableDeclaration","scope":58231,"src":"1315:13:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:39:282"}},{"id":58236,"nodeType":"EventDefinition","src":"1408:48:282","nodes":[],"anonymous":false,"documentation":{"id":58232,"nodeType":"StructuredDocumentation","src":"1336:67:282","text":"@dev Emitted when the global max wallet claim count is updated."},"eventSelector":"f9d383c69b6255cbd431ca23734f43bdf15e694c7494956c917498469bcbce73","name":"MaxWalletClaimCountUpdated","nameLocation":"1414:26:282","parameters":{"id":58235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58234,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"1449:5:282","nodeType":"VariableDeclaration","scope":58236,"src":"1441:13:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1440:15:282"}},{"id":58243,"nodeType":"EventDefinition","src":"1517:56:282","nodes":[],"anonymous":false,"documentation":{"id":58237,"nodeType":"StructuredDocumentation","src":"1462:50:282","text":"@dev Emitted when the contract URI is updated."},"eventSelector":"c9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16","name":"ContractURIUpdated","nameLocation":"1523:18:282","parameters":{"id":58242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58239,"indexed":false,"mutability":"mutable","name":"prevURI","nameLocation":"1549:7:282","nodeType":"VariableDeclaration","scope":58243,"src":"1542:14:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58238,"name":"string","nodeType":"ElementaryTypeName","src":"1542:6:282","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":58241,"indexed":false,"mutability":"mutable","name":"newURI","nameLocation":"1565:6:282","nodeType":"VariableDeclaration","scope":58243,"src":"1558:13:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58240,"name":"string","nodeType":"ElementaryTypeName","src":"1558:6:282","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1541:31:282"}},{"id":58260,"nodeType":"FunctionDefinition","src":"2471:230:282","nodes":[],"documentation":{"id":58244,"nodeType":"StructuredDocumentation","src":"1579:887:282","text":"  @notice Lets an account claim a given quantity of tokens.\n  @param receiver                       The receiver of the tokens to claim.\n  @param quantity                       The quantity of tokens to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token (i.e. price per 1 ether unit of the token)\n                                         to pay for the claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityPerTransaction (Optional) The maximum number of tokens an address included in an\n                                        allowlist can claim."},"functionSelector":"7a5a8e7e","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"2480:5:282","parameters":{"id":58258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58246,"mutability":"mutable","name":"receiver","nameLocation":"2503:8:282","nodeType":"VariableDeclaration","scope":58260,"src":"2495:16:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58245,"name":"address","nodeType":"ElementaryTypeName","src":"2495:7:282","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58248,"mutability":"mutable","name":"quantity","nameLocation":"2529:8:282","nodeType":"VariableDeclaration","scope":58260,"src":"2521:16:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2521:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58250,"mutability":"mutable","name":"currency","nameLocation":"2555:8:282","nodeType":"VariableDeclaration","scope":58260,"src":"2547:16:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58249,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:282","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58252,"mutability":"mutable","name":"pricePerToken","nameLocation":"2581:13:282","nodeType":"VariableDeclaration","scope":58260,"src":"2573:21:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2573:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58255,"mutability":"mutable","name":"proofs","nameLocation":"2623:6:282","nodeType":"VariableDeclaration","scope":58260,"src":"2604:25:282","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":58253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2604:7:282","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":58254,"nodeType":"ArrayTypeName","src":"2604:9:282","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":58257,"mutability":"mutable","name":"proofMaxQuantityPerTransaction","nameLocation":"2647:30:282","nodeType":"VariableDeclaration","scope":58260,"src":"2639:38:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:282","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:198:282"},"returnParameters":{"id":58259,"nodeType":"ParameterList","parameters":[],"src":"2700:0:282"},"scope":58271,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":58270,"nodeType":"FunctionDefinition","src":"3144:99:282","nodes":[],"documentation":{"id":58261,"nodeType":"StructuredDocumentation","src":"2707:432:282","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phases                Claim conditions in ascending order by `startTimestamp`.\n  @param resetClaimEligibility Whether to reset `limitLastClaimTimestamp` and\n                               `limitMerkleProofClaim` values when setting new\n                               claim conditions."},"functionSelector":"e23b8164","implemented":false,"kind":"function","modifiers":[],"name":"setClaimConditions","nameLocation":"3153:18:282","parameters":{"id":58268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58265,"mutability":"mutable","name":"phases","nameLocation":"3198:6:282","nodeType":"VariableDeclaration","scope":58270,"src":"3172:32:282","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"},"typeName":{"baseType":{"id":58263,"nodeType":"UserDefinedTypeName","pathNode":{"id":58262,"name":"ClaimCondition","nameLocations":["3172:14:282"],"nodeType":"IdentifierPath","referencedDeclaration":58059,"src":"3172:14:282"},"referencedDeclaration":58059,"src":"3172:14:282","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58059_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition"}},"id":58264,"nodeType":"ArrayTypeName","src":"3172:16:282","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_storage_$dyn_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"}},"visibility":"internal"},{"constant":false,"id":58267,"mutability":"mutable","name":"resetClaimEligibility","nameLocation":"3211:21:282","nodeType":"VariableDeclaration","scope":58270,"src":"3206:26:282","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58266,"name":"bool","nodeType":"ElementaryTypeName","src":"3206:4:282","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3171:62:282"},"returnParameters":{"id":58269,"nodeType":"ParameterList","parameters":[],"src":"3242:0:282"},"scope":58271,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":58198,"name":"IERC20Upgradeable","nameLocations":["661:17:282"],"nodeType":"IdentifierPath","referencedDeclaration":156641,"src":"661:17:282"},"id":58199,"nodeType":"InheritanceSpecifier","src":"661:17:282"},{"baseName":{"id":58200,"name":"IDropClaimCondition_V2","nameLocations":["680:22:282"],"nodeType":"IdentifierPath","referencedDeclaration":58082,"src":"680:22:282"},"id":58201,"nodeType":"InheritanceSpecifier","src":"680:22:282"}],"canonicalName":"IDropERC20_V2","contractDependencies":[],"contractKind":"interface","documentation":{"id":58197,"nodeType":"StructuredDocumentation","src":"207:425:282","text":"  Thirdweb's 'Drop' contracts are distribution mechanisms for tokens. The\n  `DropERC20` contract is a distribution mechanism for ERC20 tokens.\n  A contract admin (i.e. holder of `DEFAULT_ADMIN_ROLE`) can create claim conditions\n  with non-overlapping time windows, and accounts can claim the tokens according to\n  restrictions defined in the claim condition that is active at the time of the transaction."},"fullyImplemented":false,"linearizedBaseContracts":[58271,58082,156641],"name":"IDropERC20_V2","nameLocation":"644:13:282","scope":58272,"usedErrors":[],"usedEvents":[58212,58219,58224,58231,58236,58243,156575,156584]}],"license":"Apache-2.0"},"id":282}