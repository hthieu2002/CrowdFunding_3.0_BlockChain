{"abi":[{"type":"function","name":"contractURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setContractURI","inputs":[{"name":"_uri","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractURIUpdated","inputs":[{"name":"prevURI","type":"string","indexed":false,"internalType":"string"},{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thirdweb.com\",\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"title\":\"Contract Metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI           for you contract.           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/plugin/ContractMetadataLogic.sol\":\"ContractMetadataLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"contracts/extension/plugin/ContractMetadataLogic.sol\":{\"keccak256\":\"0x03b15f59bdef64105915f3a512acf05031686dc100097b302e86aa9655b1cb87\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5699be9cee263dcbbd486d6b7c9a8f9754f154edea1828f91e1935789504a45\",\"dweb:/ipfs/QmRv9LuHjrCPHDPtoRmnJoT2hYXyaHjZGNkC8MDeyAeqtN\"]},\"contracts/extension/plugin/ContractMetadataStorage.sol\":{\"keccak256\":\"0xf5180fd075fee41468769980acbf8cd5f7444ed100f137f34d703d3a6b6e4ac5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d475dc7d599c03648d2b7e3cb1296f51ef8c14492cafab4661703484d1f1cfef\",\"dweb:/ipfs/QmZhE5PdHc1V2V4MoWk2vQsvE6fdDKFeiR9U39mwhZYATx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"prevURI","type":"string","indexed":false},{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"ContractURIUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"}],"devdoc":{"kind":"dev","methods":{"contractURI()":{"details":"Returns the metadata URI of the contract."},"setContractURI(string)":{"details":"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.","params":{"_uri":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"setContractURI(string)":{"notice":"Lets a contract admin set the URI for contract-level metadata."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/plugin/ContractMetadataLogic.sol":"ContractMetadataLogic"},"libraries":{}},"sources":{"contracts/extension/interface/IContractMetadata.sol":{"keccak256":"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2","urls":["bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a","dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"],"license":"Apache-2.0"},"contracts/extension/plugin/ContractMetadataLogic.sol":{"keccak256":"0x03b15f59bdef64105915f3a512acf05031686dc100097b302e86aa9655b1cb87","urls":["bzz-raw://e5699be9cee263dcbbd486d6b7c9a8f9754f154edea1828f91e1935789504a45","dweb:/ipfs/QmRv9LuHjrCPHDPtoRmnJoT2hYXyaHjZGNkC8MDeyAeqtN"],"license":"Apache-2.0"},"contracts/extension/plugin/ContractMetadataStorage.sol":{"keccak256":"0xf5180fd075fee41468769980acbf8cd5f7444ed100f137f34d703d3a6b6e4ac5","urls":["bzz-raw://d475dc7d599c03648d2b7e3cb1296f51ef8c14492cafab4661703484d1f1cfef","dweb:/ipfs/QmZhE5PdHc1V2V4MoWk2vQsvE6fdDKFeiR9U39mwhZYATx"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/plugin/ContractMetadataLogic.sol","id":34954,"exportedSymbols":{"ContractMetadataLogic":[34953],"ContractMetadataStorage":[34976],"IContractMetadata":[32933]},"nodeType":"SourceUnit","src":"39:1944:148","nodes":[{"id":34869,"nodeType":"PragmaDirective","src":"39:23:148","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":34870,"nodeType":"ImportDirective","src":"86:39:148","nodes":[],"absolutePath":"contracts/extension/plugin/ContractMetadataStorage.sol","file":"./ContractMetadataStorage.sol","nameLocation":"-1:-1:-1","scope":34954,"sourceUnit":34977,"symbolAliases":[],"unitAlias":""},{"id":34871,"nodeType":"ImportDirective","src":"126:44:148","nodes":[],"absolutePath":"contracts/extension/interface/IContractMetadata.sol","file":"../interface/IContractMetadata.sol","nameLocation":"-1:-1:-1","scope":34954,"sourceUnit":32934,"symbolAliases":[],"unitAlias":""},{"id":34953,"nodeType":"ContractDefinition","src":"522:1460:148","nodes":[{"id":34893,"nodeType":"FunctionDefinition","src":"644:202:148","nodes":[],"body":{"id":34892,"nodeType":"Block","src":"703:143:148","nodes":[],"statements":[{"assignments":[34884],"declarations":[{"constant":false,"id":34884,"mutability":"mutable","name":"data","nameLocation":"750:4:148","nodeType":"VariableDeclaration","scope":34892,"src":"713:41:148","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data"},"typeName":{"id":34883,"nodeType":"UserDefinedTypeName","pathNode":{"id":34882,"name":"ContractMetadataStorage.Data","nameLocations":["713:23:148","737:4:148"],"nodeType":"IdentifierPath","referencedDeclaration":34963,"src":"713:28:148"},"referencedDeclaration":34963,"src":"713:28:148","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data"}},"visibility":"internal"}],"id":34888,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":34885,"name":"ContractMetadataStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34976,"src":"757:23:148","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractMetadataStorage_$34976_$","typeString":"type(library ContractMetadataStorage)"}},"id":34886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"781:23:148","memberName":"contractMetadataStorage","nodeType":"MemberAccess","referencedDeclaration":34975,"src":"757:47:148","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Data_$34963_storage_ptr_$","typeString":"function () pure returns (struct ContractMetadataStorage.Data storage pointer)"}},"id":34887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:49:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"713:93:148"},{"expression":{"expression":{"id":34889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34884,"src":"823:4:148","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data storage pointer"}},"id":34890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"828:11:148","memberName":"contractURI","nodeType":"MemberAccess","referencedDeclaration":34962,"src":"823:16:148","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":34879,"id":34891,"nodeType":"Return","src":"816:23:148"}]},"baseFunctions":[32919],"documentation":{"id":34875,"nodeType":"StructuredDocumentation","src":"589:50:148","text":"@dev Returns the metadata URI of the contract."},"functionSelector":"e8a3d485","implemented":true,"kind":"function","modifiers":[],"name":"contractURI","nameLocation":"653:11:148","parameters":{"id":34876,"nodeType":"ParameterList","parameters":[],"src":"664:2:148"},"returnParameters":{"id":34879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34893,"src":"688:13:148","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34877,"name":"string","nodeType":"ElementaryTypeName","src":"688:6:148","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"687:15:148"},"scope":34953,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":34914,"nodeType":"FunctionDefinition","src":"1249:188:148","nodes":[],"body":{"id":34913,"nodeType":"Block","src":"1311:126:148","nodes":[],"statements":[{"condition":{"id":34902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1325:21:148","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":34900,"name":"_canSetContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34952,"src":"1326:18:148","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":34901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1326:20:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34908,"nodeType":"IfStatement","src":"1321:76:148","trueBody":{"id":34907,"nodeType":"Block","src":"1348:49:148","statements":[{"expression":{"arguments":[{"hexValue":"4e6f7420617574686f72697a6564","id":34904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1369:16:148","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":34903,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1362:6:148","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":34905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1362:24:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":34906,"nodeType":"ExpressionStatement","src":"1362:24:148"}]}},{"expression":{"arguments":[{"id":34910,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34896,"src":"1425:4:148","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":34909,"name":"_setupContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34946,"src":"1407:17:148","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":34911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:23:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":34912,"nodeType":"ExpressionStatement","src":"1407:23:148"}]},"baseFunctions":[32925],"documentation":{"id":34894,"nodeType":"StructuredDocumentation","src":"852:392:148","text":"  @notice         Lets a contract admin set the URI for contract-level metadata.\n  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n                  See {_canSetContractURI}.\n                  Emits {ContractURIUpdated Event}.\n  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"},"functionSelector":"938e3d7b","implemented":true,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"1258:14:148","overrides":{"id":34898,"nodeType":"OverrideSpecifier","overrides":[],"src":"1302:8:148"},"parameters":{"id":34897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34896,"mutability":"mutable","name":"_uri","nameLocation":"1287:4:148","nodeType":"VariableDeclaration","scope":34914,"src":"1273:18:148","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34895,"name":"string","nodeType":"ElementaryTypeName","src":"1273:6:148","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1272:20:148"},"returnParameters":{"id":34899,"nodeType":"ParameterList","parameters":[],"src":"1311:0:148"},"scope":34953,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":34946,"nodeType":"FunctionDefinition","src":"1519:298:148","nodes":[],"body":{"id":34945,"nodeType":"Block","src":"1575:242:148","nodes":[],"statements":[{"assignments":[34924],"declarations":[{"constant":false,"id":34924,"mutability":"mutable","name":"data","nameLocation":"1622:4:148","nodeType":"VariableDeclaration","scope":34945,"src":"1585:41:148","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data"},"typeName":{"id":34923,"nodeType":"UserDefinedTypeName","pathNode":{"id":34922,"name":"ContractMetadataStorage.Data","nameLocations":["1585:23:148","1609:4:148"],"nodeType":"IdentifierPath","referencedDeclaration":34963,"src":"1585:28:148"},"referencedDeclaration":34963,"src":"1585:28:148","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data"}},"visibility":"internal"}],"id":34928,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":34925,"name":"ContractMetadataStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34976,"src":"1629:23:148","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractMetadataStorage_$34976_$","typeString":"type(library ContractMetadataStorage)"}},"id":34926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1653:23:148","memberName":"contractMetadataStorage","nodeType":"MemberAccess","referencedDeclaration":34975,"src":"1629:47:148","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Data_$34963_storage_ptr_$","typeString":"function () pure returns (struct ContractMetadataStorage.Data storage pointer)"}},"id":34927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:49:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1585:93:148"},{"assignments":[34930],"declarations":[{"constant":false,"id":34930,"mutability":"mutable","name":"prevURI","nameLocation":"1702:7:148","nodeType":"VariableDeclaration","scope":34945,"src":"1688:21:148","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34929,"name":"string","nodeType":"ElementaryTypeName","src":"1688:6:148","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":34933,"initialValue":{"expression":{"id":34931,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34924,"src":"1712:4:148","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data storage pointer"}},"id":34932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1717:11:148","memberName":"contractURI","nodeType":"MemberAccess","referencedDeclaration":34962,"src":"1712:16:148","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1688:40:148"},{"expression":{"id":34938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":34934,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34924,"src":"1738:4:148","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$34963_storage_ptr","typeString":"struct ContractMetadataStorage.Data storage pointer"}},"id":34936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1743:11:148","memberName":"contractURI","nodeType":"MemberAccess","referencedDeclaration":34962,"src":"1738:16:148","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":34937,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34917,"src":"1757:4:148","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1738:23:148","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":34939,"nodeType":"ExpressionStatement","src":"1738:23:148"},{"eventCall":{"arguments":[{"id":34941,"name":"prevURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34930,"src":"1796:7:148","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":34942,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34917,"src":"1805:4:148","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":34940,"name":"ContractURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32932,"src":"1777:18:148","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":34943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:33:148","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":34944,"nodeType":"EmitStatement","src":"1772:38:148"}]},"documentation":{"id":34915,"nodeType":"StructuredDocumentation","src":"1443:71:148","text":"@dev Lets a contract admin set the URI for contract-level metadata."},"implemented":true,"kind":"function","modifiers":[],"name":"_setupContractURI","nameLocation":"1528:17:148","parameters":{"id":34918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34917,"mutability":"mutable","name":"_uri","nameLocation":"1560:4:148","nodeType":"VariableDeclaration","scope":34946,"src":"1546:18:148","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34916,"name":"string","nodeType":"ElementaryTypeName","src":"1546:6:148","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1545:20:148"},"returnParameters":{"id":34919,"nodeType":"ParameterList","parameters":[],"src":"1575:0:148"},"scope":34953,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":34952,"nodeType":"FunctionDefinition","src":"1913:67:148","nodes":[],"documentation":{"id":34947,"nodeType":"StructuredDocumentation","src":"1823:85:148","text":"@dev Returns whether contract metadata can be set in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canSetContractURI","nameLocation":"1922:18:148","parameters":{"id":34948,"nodeType":"ParameterList","parameters":[],"src":"1940:2:148"},"returnParameters":{"id":34951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34952,"src":"1974:4:148","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34949,"name":"bool","nodeType":"ElementaryTypeName","src":"1974:4:148","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1973:6:148"},"scope":34953,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":34873,"name":"IContractMetadata","nameLocations":["565:17:148"],"nodeType":"IdentifierPath","referencedDeclaration":32933,"src":"565:17:148"},"id":34874,"nodeType":"InheritanceSpecifier","src":"565:17:148"}],"canonicalName":"ContractMetadataLogic","contractDependencies":[],"contractKind":"contract","documentation":{"id":34872,"nodeType":"StructuredDocumentation","src":"172:348:148","text":"  @author  thirdweb.com\n  @title   Contract Metadata\n  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n           for you contract.\n           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"linearizedBaseContracts":[34953,32933],"name":"ContractMetadataLogic","nameLocation":"540:21:148","scope":34954,"usedErrors":[],"usedEvents":[32932]}],"license":"Apache-2.0"},"id":148}