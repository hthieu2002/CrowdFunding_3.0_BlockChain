{"abi":[{"type":"function","name":"batchFrozen","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getBaseURICount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBatchIdAtIndex","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lazyMint","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_baseURIForTokens","type":"string","internalType":"string"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"batchId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"BatchMetadataUpdate","inputs":[{"name":"_fromTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_toTokenId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MetadataFrozen","inputs":[],"anonymous":false},{"type":"event","name":"TokensLazyMinted","inputs":[{"name":"startTokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"endTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"baseURI","type":"string","indexed":false,"internalType":"string"},{"name":"encryptedBaseURI","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"batchFrozen(uint256)":"83040532","getBaseURICount()":"63b45e2d","getBatchIdAtIndex(uint256)":"2419f51b","lazyMint(uint256,string,bytes)":"d37c353b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"}},\"kind\":\"dev\",\"methods\":{\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"}},\"notice\":\"The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually  minting a non-zero balance of NFTs of those tokenIds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/LazyMint.sol\":\"LazyMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365\",\"dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_fromTokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"_toTokenId","type":"uint256","indexed":false}],"type":"event","name":"BatchMetadataUpdate","anonymous":false},{"inputs":[],"type":"event","name":"MetadataFrozen","anonymous":false},{"inputs":[{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"endTokenId","type":"uint256","indexed":false},{"internalType":"string","name":"baseURI","type":"string","indexed":false},{"internalType":"bytes","name":"encryptedBaseURI","type":"bytes","indexed":false}],"type":"event","name":"TokensLazyMinted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"batchFrozen","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBaseURICount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBatchIdAtIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_baseURIForTokens","type":"string"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lazyMint","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getBaseURICount()":{"details":"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."},"getBatchIdAtIndex(uint256)":{"details":"See {getBaseURICount}.","params":{"_index":"Index of the desired batch in batchIds array."}},"lazyMint(uint256,string,bytes)":{"params":{"_amount":"The number of NFTs to lazy mint.","_baseURIForTokens":"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.","_data":"Additional bytes data to be used at the discretion of the consumer of the contract."},"returns":{"batchId":"         A unique integer identifier for the batch of NFTs lazy minted together."}}},"version":1},"userdoc":{"kind":"user","methods":{"getBaseURICount()":{"notice":"Returns the count of batches of NFTs."},"getBatchIdAtIndex(uint256)":{"notice":"Returns the ID for the batch of tokens at the given index."},"lazyMint(uint256,string,bytes)":{"notice":"Lets an authorized address lazy mint a given amount of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/LazyMint.sol":"LazyMint"},"libraries":{}},"sources":{"contracts/extension/BatchMintMetadata.sol":{"keccak256":"0xa01614be56c98e216f76e432b1423881dd4cdac939a6c2dca0fd7884dbb60345","urls":["bzz-raw://9c1269b616818556a5bf10c6fcfe39035aca82efb9214c2ad456e9679c66d365","dweb:/ipfs/QmZwPXBFAqNAwY1Zi3hiGhs3iKLbhtVAQhhmxjmu4pGLXc"],"license":"Apache-2.0"},"contracts/extension/LazyMint.sol":{"keccak256":"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170","urls":["bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827","dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"],"license":"Apache-2.0"},"contracts/extension/interface/ILazyMint.sol":{"keccak256":"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec","urls":["bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3","dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/LazyMint.sol","id":20722,"exportedSymbols":{"BatchMintMetadata":[17733],"ILazyMint":[33312],"LazyMint":[20721]},"nodeType":"SourceUnit","src":"39:1968:63","nodes":[{"id":20645,"nodeType":"PragmaDirective","src":"39:23:63","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":20646,"nodeType":"ImportDirective","src":"86:35:63","nodes":[],"absolutePath":"contracts/extension/interface/ILazyMint.sol","file":"./interface/ILazyMint.sol","nameLocation":"-1:-1:-1","scope":20722,"sourceUnit":33313,"symbolAliases":[],"unitAlias":""},{"id":20647,"nodeType":"ImportDirective","src":"122:33:63","nodes":[],"absolutePath":"contracts/extension/BatchMintMetadata.sol","file":"./BatchMintMetadata.sol","nameLocation":"-1:-1:-1","scope":20722,"sourceUnit":17734,"symbolAliases":[],"unitAlias":""},{"id":20721,"nodeType":"ContractDefinition","src":"459:1547:63","nodes":[{"id":20655,"nodeType":"VariableDeclaration","src":"600:38:63","nodes":[],"constant":false,"documentation":{"id":20653,"nodeType":"StructuredDocumentation","src":"524:71:63","text":"@notice The tokenId assigned to the next new NFT to be lazy minted."},"mutability":"mutable","name":"nextTokenIdToLazyMint","nameLocation":"617:21:63","scope":20721,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20654,"name":"uint256","nodeType":"ElementaryTypeName","src":"600:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":20714,"nodeType":"FunctionDefinition","src":"1254:592:63","nodes":[],"body":{"id":20713,"nodeType":"Block","src":"1426:420:63","nodes":[],"statements":[{"condition":{"id":20670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1440:15:63","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":20668,"name":"_canLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20720,"src":"1441:12:63","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":20669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1441:14:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":20676,"nodeType":"IfStatement","src":"1436:70:63","trueBody":{"id":20675,"nodeType":"Block","src":"1457:49:63","statements":[{"expression":{"arguments":[{"hexValue":"4e6f7420617574686f72697a6564","id":20672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1478:16:63","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":20671,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1471:6:63","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":20673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1471:24:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20674,"nodeType":"ExpressionStatement","src":"1471:24:63"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":20679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":20677,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20658,"src":"1520:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":20678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1531:1:63","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1520:12:63","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":20685,"nodeType":"IfStatement","src":"1516:58:63","trueBody":{"id":20684,"nodeType":"Block","src":"1534:40:63","statements":[{"expression":{"arguments":[{"hexValue":"3020616d74","id":20681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:7:63","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a2ffc405bd01b6d581e1962140c15d8313f08001cf89458c30107c60719bf0","typeString":"literal_string \"0 amt\""},"value":"0 amt"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_48a2ffc405bd01b6d581e1962140c15d8313f08001cf89458c30107c60719bf0","typeString":"literal_string \"0 amt\""}],"id":20680,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1548:6:63","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":20682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:15:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20683,"nodeType":"ExpressionStatement","src":"1548:15:63"}]}},{"assignments":[20687],"declarations":[{"constant":false,"id":20687,"mutability":"mutable","name":"startId","nameLocation":"1592:7:63","nodeType":"VariableDeclaration","scope":20713,"src":"1584:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1584:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":20689,"initialValue":{"id":20688,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20655,"src":"1602:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1584:39:63"},{"expression":{"id":20698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":20690,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20655,"src":"1635:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":20691,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20666,"src":"1658:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":20692,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1634:32:63","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":20694,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20687,"src":"1688:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":20695,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20658,"src":"1697:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":20696,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20660,"src":"1706:17:63","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":20693,"name":"_batchMintMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17732,"src":"1669:18:63","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,string memory) returns (uint256,uint256)"}},"id":20697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:55:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"1634:90:63","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20699,"nodeType":"ExpressionStatement","src":"1634:90:63"},{"eventCall":{"arguments":[{"id":20701,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20687,"src":"1757:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":20706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":20704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":20702,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20687,"src":"1766:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":20703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20658,"src":"1776:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1766:17:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":20705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:1:63","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1766:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":20707,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20660,"src":"1789:17:63","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":20708,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20662,"src":"1808:5:63","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":20700,"name":"TokensLazyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33299,"src":"1740:16:63","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory,bytes memory)"}},"id":20709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:74:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20710,"nodeType":"EmitStatement","src":"1735:79:63"},{"expression":{"id":20711,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20666,"src":"1832:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":20667,"id":20712,"nodeType":"Return","src":"1825:14:63"}]},"baseFunctions":[33311],"documentation":{"id":20656,"nodeType":"StructuredDocumentation","src":"645:604:63","text":"  @notice                  Lets an authorized address lazy mint a given amount of NFTs.\n  @param _amount           The number of NFTs to lazy mint.\n  @param _baseURIForTokens The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each\n                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\n  @param _data             Additional bytes data to be used at the discretion of the consumer of the contract.\n  @return batchId          A unique integer identifier for the batch of NFTs lazy minted together."},"functionSelector":"d37c353b","implemented":true,"kind":"function","modifiers":[],"name":"lazyMint","nameLocation":"1263:8:63","overrides":{"id":20664,"nodeType":"OverrideSpecifier","overrides":[],"src":"1391:8:63"},"parameters":{"id":20663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20658,"mutability":"mutable","name":"_amount","nameLocation":"1289:7:63","nodeType":"VariableDeclaration","scope":20714,"src":"1281:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1281:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20660,"mutability":"mutable","name":"_baseURIForTokens","nameLocation":"1322:17:63","nodeType":"VariableDeclaration","scope":20714,"src":"1306:33:63","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20659,"name":"string","nodeType":"ElementaryTypeName","src":"1306:6:63","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20662,"mutability":"mutable","name":"_data","nameLocation":"1364:5:63","nodeType":"VariableDeclaration","scope":20714,"src":"1349:20:63","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20661,"name":"bytes","nodeType":"ElementaryTypeName","src":"1349:5:63","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1271:104:63"},"returnParameters":{"id":20667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20666,"mutability":"mutable","name":"batchId","nameLocation":"1417:7:63","nodeType":"VariableDeclaration","scope":20714,"src":"1409:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1408:17:63"},"scope":20721,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":20720,"nodeType":"FunctionDefinition","src":"1943:61:63","nodes":[],"documentation":{"id":20715,"nodeType":"StructuredDocumentation","src":"1852:86:63","text":"@dev Returns whether lazy minting can be performed in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canLazyMint","nameLocation":"1952:12:63","parameters":{"id":20716,"nodeType":"ParameterList","parameters":[],"src":"1964:2:63"},"returnParameters":{"id":20719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20720,"src":"1998:4:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20717,"name":"bool","nodeType":"ElementaryTypeName","src":"1998:4:63","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1997:6:63"},"scope":20721,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":20649,"name":"ILazyMint","nameLocations":["489:9:63"],"nodeType":"IdentifierPath","referencedDeclaration":33312,"src":"489:9:63"},"id":20650,"nodeType":"InheritanceSpecifier","src":"489:9:63"},{"baseName":{"id":20651,"name":"BatchMintMetadata","nameLocations":["500:17:63"],"nodeType":"IdentifierPath","referencedDeclaration":17733,"src":"500:17:63"},"id":20652,"nodeType":"InheritanceSpecifier","src":"500:17:63"}],"canonicalName":"LazyMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":20648,"nodeType":"StructuredDocumentation","src":"157:300:63","text":"  The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs\n  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually\n  minting a non-zero balance of NFTs of those tokenIds."},"fullyImplemented":false,"linearizedBaseContracts":[20721,17733,33312],"name":"LazyMint","nameLocation":"477:8:63","scope":20722,"usedErrors":[],"usedEvents":[17423,17430,33299]}],"license":"Apache-2.0"},"id":63}