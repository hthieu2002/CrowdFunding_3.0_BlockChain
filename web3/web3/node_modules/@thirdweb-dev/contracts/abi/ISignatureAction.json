{"abi":[{"type":"function","name":"verify","inputs":[{"name":"req","type":"tuple","internalType":"struct ISignatureAction.GenericRequest","components":[{"name":"validityStartTimestamp","type":"uint128","internalType":"uint128"},{"name":"validityEndTimestamp","type":"uint128","internalType":"uint128"},{"name":"uid","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"signer","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"RequestExecuted","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"signer","type":"address","indexed":true,"internalType":"address"},{"name":"_req","type":"tuple","indexed":false,"internalType":"struct ISignatureAction.GenericRequest","components":[{"name":"validityStartTimestamp","type":"uint128","internalType":"uint128"},{"name":"validityEndTimestamp","type":"uint128","internalType":"uint128"},{"name":"uid","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"verify((uint128,uint128,bytes32,bytes),bytes)":"c4376dd7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ISignatureAction.GenericRequest\",\"name\":\"_req\",\"type\":\"tuple\"}],\"name\":\"RequestExecuted\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"validityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"validityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISignatureAction.GenericRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verify((uint128,uint128,bytes32,bytes),bytes)\":{\"params\":{\"req\":\"The payload signed by the authorized wallet.\",\"signature\":\"The signature produced by the authorized wallet signing the given payload.\"},\"returns\":{\"signer\":\"The address of the signer.\",\"success\":\"Whether the payload is signed by the authorized wallet.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"RequestExecuted(address,address,(uint128,uint128,bytes32,bytes))\":{\"notice\":\"Emitted when a payload is verified and executed.\"}},\"kind\":\"user\",\"methods\":{\"verify((uint128,uint128,bytes32,bytes),bytes)\":{\"notice\":\"Verfies that a payload is signed by an authorized wallet.\"}},\"notice\":\"thirdweb's `SignatureAction` extension smart contract can be used with any base smart contract. It provides a generic  payload struct that can be signed by an authorized wallet and verified by the contract. The bytes `data` field provided  in the payload can be abi encoded <-> decoded to use `SignatureContract` for any authorized signature action.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/ISignatureAction.sol\":\"ISignatureAction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/ISignatureAction.sol\":{\"keccak256\":\"0xafb58aafdcc00c1f2faef41b4a219812bb8ff1940dc3537a800df442595d16a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://025d8cd1f20eba7ff481a9dd79cd134c4bf6e8a96735362db925afa61799a72d\",\"dweb:/ipfs/QmZXcEHcy3SXRxn6Bny5rVL7Bct9EQx9VofqLfs8CH5R4A\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"address","name":"signer","type":"address","indexed":true},{"internalType":"struct ISignatureAction.GenericRequest","name":"_req","type":"tuple","components":[{"internalType":"uint128","name":"validityStartTimestamp","type":"uint128"},{"internalType":"uint128","name":"validityEndTimestamp","type":"uint128"},{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"indexed":false}],"type":"event","name":"RequestExecuted","anonymous":false},{"inputs":[{"internalType":"struct ISignatureAction.GenericRequest","name":"req","type":"tuple","components":[{"internalType":"uint128","name":"validityStartTimestamp","type":"uint128"},{"internalType":"uint128","name":"validityEndTimestamp","type":"uint128"},{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"verify","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"address","name":"signer","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"verify((uint128,uint128,bytes32,bytes),bytes)":{"params":{"req":"The payload signed by the authorized wallet.","signature":"The signature produced by the authorized wallet signing the given payload."},"returns":{"signer":"The address of the signer.","success":"Whether the payload is signed by the authorized wallet."}}},"version":1},"userdoc":{"kind":"user","methods":{"verify((uint128,uint128,bytes32,bytes),bytes)":{"notice":"Verfies that a payload is signed by an authorized wallet."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/interface/ISignatureAction.sol":"ISignatureAction"},"libraries":{}},"sources":{"contracts/extension/interface/ISignatureAction.sol":{"keccak256":"0xafb58aafdcc00c1f2faef41b4a219812bb8ff1940dc3537a800df442595d16a1","urls":["bzz-raw://025d8cd1f20eba7ff481a9dd79cd134c4bf6e8a96735362db925afa61799a72d","dweb:/ipfs/QmZXcEHcy3SXRxn6Bny5rVL7Bct9EQx9VofqLfs8CH5R4A"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/interface/ISignatureAction.sol","id":34225,"exportedSymbols":{"ISignatureAction":[34224]},"nodeType":"SourceUnit","src":"39:1760:137","nodes":[{"id":34189,"nodeType":"PragmaDirective","src":"39:23:137","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":34224,"nodeType":"ContractDefinition","src":"455:1343:137","nodes":[{"id":34200,"nodeType":"StructDefinition","src":"938:148:137","nodes":[],"canonicalName":"ISignatureAction.GenericRequest","documentation":{"id":34191,"nodeType":"StructuredDocumentation","src":"488:445:137","text":"  @notice The payload that must be signed by an authorized wallet.\n  @param validityStartTimestamp The UNIX timestamp at and after which a signature is valid.\n  @param validityEndTimestamp The UNIX timestamp at and after which a signature is invalid/expired.\n  @param uid A unique non-repeatable ID for the payload.\n  @param data Arbitrary bytes data to be used at the discretion of the contract."},"members":[{"constant":false,"id":34193,"mutability":"mutable","name":"validityStartTimestamp","nameLocation":"978:22:137","nodeType":"VariableDeclaration","scope":34200,"src":"970:30:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":34192,"name":"uint128","nodeType":"ElementaryTypeName","src":"970:7:137","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":34195,"mutability":"mutable","name":"validityEndTimestamp","nameLocation":"1018:20:137","nodeType":"VariableDeclaration","scope":34200,"src":"1010:28:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":34194,"name":"uint128","nodeType":"ElementaryTypeName","src":"1010:7:137","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":34197,"mutability":"mutable","name":"uid","nameLocation":"1056:3:137","nodeType":"VariableDeclaration","scope":34200,"src":"1048:11:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":34196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1048:7:137","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34199,"mutability":"mutable","name":"data","nameLocation":"1075:4:137","nodeType":"VariableDeclaration","scope":34200,"src":"1069:10:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":34198,"name":"bytes","nodeType":"ElementaryTypeName","src":"1069:5:137","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"GenericRequest","nameLocation":"945:14:137","scope":34224,"visibility":"public"},{"id":34210,"nodeType":"EventDefinition","src":"1157:89:137","nodes":[],"anonymous":false,"documentation":{"id":34201,"nodeType":"StructuredDocumentation","src":"1092:60:137","text":"@notice Emitted when a payload is verified and executed."},"eventSelector":"7cff7390c0e05884db99af788a5debbcd2106d17f91e5991e9879d1ccac18781","name":"RequestExecuted","nameLocation":"1163:15:137","parameters":{"id":34209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34203,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1195:4:137","nodeType":"VariableDeclaration","scope":34210,"src":"1179:20:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34202,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:137","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34205,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1217:6:137","nodeType":"VariableDeclaration","scope":34210,"src":"1201:22:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34204,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:137","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34208,"indexed":false,"mutability":"mutable","name":"_req","nameLocation":"1240:4:137","nodeType":"VariableDeclaration","scope":34210,"src":"1225:19:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_GenericRequest_$34200_memory_ptr","typeString":"struct ISignatureAction.GenericRequest"},"typeName":{"id":34207,"nodeType":"UserDefinedTypeName","pathNode":{"id":34206,"name":"GenericRequest","nameLocations":["1225:14:137"],"nodeType":"IdentifierPath","referencedDeclaration":34200,"src":"1225:14:137"},"referencedDeclaration":34200,"src":"1225:14:137","typeDescriptions":{"typeIdentifier":"t_struct$_GenericRequest_$34200_storage_ptr","typeString":"struct ISignatureAction.GenericRequest"}},"visibility":"internal"}],"src":"1178:67:137"}},{"id":34223,"nodeType":"FunctionDefinition","src":"1650:146:137","nodes":[],"documentation":{"id":34211,"nodeType":"StructuredDocumentation","src":"1252:393:137","text":"  @notice Verfies that a payload is signed by an authorized wallet.\n  @param req The payload signed by the authorized wallet.\n  @param signature The signature produced by the authorized wallet signing the given payload.\n  @return success Whether the payload is signed by the authorized wallet.\n  @return signer The address of the signer."},"functionSelector":"c4376dd7","implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1659:6:137","parameters":{"id":34217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34214,"mutability":"mutable","name":"req","nameLocation":"1699:3:137","nodeType":"VariableDeclaration","scope":34223,"src":"1675:27:137","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_GenericRequest_$34200_calldata_ptr","typeString":"struct ISignatureAction.GenericRequest"},"typeName":{"id":34213,"nodeType":"UserDefinedTypeName","pathNode":{"id":34212,"name":"GenericRequest","nameLocations":["1675:14:137"],"nodeType":"IdentifierPath","referencedDeclaration":34200,"src":"1675:14:137"},"referencedDeclaration":34200,"src":"1675:14:137","typeDescriptions":{"typeIdentifier":"t_struct$_GenericRequest_$34200_storage_ptr","typeString":"struct ISignatureAction.GenericRequest"}},"visibility":"internal"},{"constant":false,"id":34216,"mutability":"mutable","name":"signature","nameLocation":"1727:9:137","nodeType":"VariableDeclaration","scope":34223,"src":"1712:24:137","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":34215,"name":"bytes","nodeType":"ElementaryTypeName","src":"1712:5:137","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1665:77:137"},"returnParameters":{"id":34222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34219,"mutability":"mutable","name":"success","nameLocation":"1771:7:137","nodeType":"VariableDeclaration","scope":34223,"src":"1766:12:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":34218,"name":"bool","nodeType":"ElementaryTypeName","src":"1766:4:137","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":34221,"mutability":"mutable","name":"signer","nameLocation":"1788:6:137","nodeType":"VariableDeclaration","scope":34223,"src":"1780:14:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34220,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:137","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1765:30:137"},"scope":34224,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISignatureAction","contractDependencies":[],"contractKind":"interface","documentation":{"id":34190,"nodeType":"StructuredDocumentation","src":"86:367:137","text":"  thirdweb's `SignatureAction` extension smart contract can be used with any base smart contract. It provides a generic\n  payload struct that can be signed by an authorized wallet and verified by the contract. The bytes `data` field provided\n  in the payload can be abi encoded <-> decoded to use `SignatureContract` for any authorized signature action."},"fullyImplemented":false,"linearizedBaseContracts":[34224],"name":"ISignatureAction","nameLocation":"465:16:137","scope":34225,"usedErrors":[],"usedEvents":[34210]}],"license":"Apache-2.0"},"id":137}