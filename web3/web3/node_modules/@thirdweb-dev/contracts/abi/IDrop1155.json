{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"allowlistProof","type":"tuple","internalType":"struct IDrop1155.AllowlistProof","components":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"quantityLimitPerWallet","type":"uint256","internalType":"uint256"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setClaimConditions","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"phases","type":"tuple[]","internalType":"struct IClaimCondition.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerWallet","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"metadata","type":"string","internalType":"string"}]},{"name":"resetClaimEligibility","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ClaimConditionsUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claimConditions","type":"tuple[]","indexed":false,"internalType":"struct IClaimCondition.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerWallet","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"metadata","type":"string","internalType":"string"}]},{"name":"resetEligibility","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimConditionIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)":"57bc3d78","setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)":"183718d1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop1155.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"phases\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\",\"tokenId\":\"The tokenId of the NFT to claim.\"}},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"params\":{\"phases\":\"Claim conditions in ascending order by `startTimestamp`.\",\"resetClaimEligibility\":\"Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set.\",\"tokenId\":\"The token ID for which to set mint conditions.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed.\"}},\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"notice\":\"The interface `IDrop1155` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IDrop1155.sol\":\"IDrop1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459\",\"dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125\",\"dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh\"]},\"contracts/extension/interface/IDrop1155.sol\":{\"keccak256\":\"0xf2d1bdb2bcca1c6c239ca66e8d7c53061e98071b6f359aa7fac2aa9ca18ed0a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2a475e1c82a83d6a0129ca94fd235c104e4855b2ee948a1ee960c59bf0cda8da\",\"dweb:/ipfs/QmbfuSuU4fuU5XVTkmpefft9XSEgDocgWGcVwfW4rMsGgG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"struct IClaimCondition.ClaimCondition[]","name":"claimConditions","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"string","name":"metadata","type":"string"}],"indexed":false},{"internalType":"bool","name":"resetEligibility","type":"bool","indexed":false}],"type":"event","name":"ClaimConditionsUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"claimConditionIndex","type":"uint256","indexed":true},{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"struct IDrop1155.AllowlistProof","name":"allowlistProof","type":"tuple","components":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"uint256","name":"quantityLimitPerWallet","type":"uint256"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}]},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"claim"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"struct IClaimCondition.ClaimCondition[]","name":"phases","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"string","name":"metadata","type":"string"}]},{"internalType":"bool","name":"resetClaimEligibility","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setClaimConditions"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)":{"params":{"allowlistProof":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","currency":"The currency in which to pay for the claim.","data":"Arbitrary bytes data that can be leveraged in the implementation of this interface.","pricePerToken":"The price per token to pay for the claim.","quantity":"The quantity of NFTs to claim.","receiver":"The receiver of the NFTs to claim.","tokenId":"The tokenId of the NFT to claim."}},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)":{"params":{"phases":"Claim conditions in ascending order by `startTimestamp`.","resetClaimEligibility":"Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set.","tokenId":"The token ID for which to set mint conditions."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)":{"notice":"Lets an account claim a given quantity of NFTs."},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/interface/IDrop1155.sol":"IDrop1155"},"libraries":{}},"sources":{"contracts/extension/interface/IClaimCondition.sol":{"keccak256":"0x391e69970031edb30dfa59f8db33c7446b349cd5ec505fd99f0f0b672b19e6d6","urls":["bzz-raw://fd9eafca6098421f3aa25bf0a0b24386facc764b7ecb8e6ce4a890afa3c6d459","dweb:/ipfs/QmPXTSX2ie5wsZ6FyXWS4YMa7aPpYNyza9Rym1n799B5LU"],"license":"Apache-2.0"},"contracts/extension/interface/IClaimConditionMultiPhase.sol":{"keccak256":"0x8388214d6cc8f1fd481aed7e062a8b23d5959e870a56076017fcf474404dbbfa","urls":["bzz-raw://54c039ba9f0e674a6bdbb0ab015ad4054feffaea7eb3cc7c485aa95761156125","dweb:/ipfs/QmTya89XYsc1iGAhfsHeZkgGaAv7ivA5Vr4jrGCifYHmKh"],"license":"Apache-2.0"},"contracts/extension/interface/IDrop1155.sol":{"keccak256":"0xf2d1bdb2bcca1c6c239ca66e8d7c53061e98071b6f359aa7fac2aa9ca18ed0a1","urls":["bzz-raw://2a475e1c82a83d6a0129ca94fd235c104e4855b2ee948a1ee960c59bf0cda8da","dweb:/ipfs/QmbfuSuU4fuU5XVTkmpefft9XSEgDocgWGcVwfW4rMsGgG"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/interface/IDrop1155.sol","id":33144,"exportedSymbols":{"IClaimCondition":[32780],"IClaimConditionMultiPhase":[32804],"IDrop1155":[33143]},"nodeType":"SourceUnit","src":"39:3353:113","nodes":[{"id":33072,"nodeType":"PragmaDirective","src":"39:23:113","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":33073,"nodeType":"ImportDirective","src":"86:41:113","nodes":[],"absolutePath":"contracts/extension/interface/IClaimConditionMultiPhase.sol","file":"./IClaimConditionMultiPhase.sol","nameLocation":"-1:-1:-1","scope":33144,"sourceUnit":32805,"symbolAliases":[],"unitAlias":""},{"id":33143,"nodeType":"ContractDefinition","src":"579:2812:113","nodes":[{"id":33087,"nodeType":"StructDefinition","src":"1055:151:113","nodes":[],"canonicalName":"IDrop1155.AllowlistProof","documentation":{"id":33077,"nodeType":"StructuredDocumentation","src":"634:416:113","text":"  @param proof Proof of concerned wallet's inclusion in an allowlist.\n  @param quantityLimitPerWallet The total quantity of tokens the allowlisted wallet is eligible to claim over time.\n  @param pricePerToken The price per token the allowlisted wallet must pay to claim tokens.\n  @param currency The currency in which the allowlisted wallet must pay the price for claiming tokens."},"members":[{"constant":false,"id":33080,"mutability":"mutable","name":"proof","nameLocation":"1097:5:113","nodeType":"VariableDeclaration","scope":33087,"src":"1087:15:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":33078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1087:7:113","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":33079,"nodeType":"ArrayTypeName","src":"1087:9:113","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":33082,"mutability":"mutable","name":"quantityLimitPerWallet","nameLocation":"1120:22:113","nodeType":"VariableDeclaration","scope":33087,"src":"1112:30:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33084,"mutability":"mutable","name":"pricePerToken","nameLocation":"1160:13:113","nodeType":"VariableDeclaration","scope":33087,"src":"1152:21:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33086,"mutability":"mutable","name":"currency","nameLocation":"1191:8:113","nodeType":"VariableDeclaration","scope":33087,"src":"1183:16:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33085,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:113","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AllowlistProof","nameLocation":"1062:14:113","scope":33143,"visibility":"public"},{"id":33100,"nodeType":"EventDefinition","src":"1261:196:113","nodes":[],"anonymous":false,"documentation":{"id":33088,"nodeType":"StructuredDocumentation","src":"1212:44:113","text":"@notice Emitted when tokens are claimed."},"eventSelector":"fa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e","name":"TokensClaimed","nameLocation":"1267:13:113","parameters":{"id":33099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33090,"indexed":true,"mutability":"mutable","name":"claimConditionIndex","nameLocation":"1306:19:113","nodeType":"VariableDeclaration","scope":33100,"src":"1290:35:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33092,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"1351:7:113","nodeType":"VariableDeclaration","scope":33100,"src":"1335:23:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33091,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:113","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33094,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1384:8:113","nodeType":"VariableDeclaration","scope":33100,"src":"1368:24:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33093,"name":"address","nodeType":"ElementaryTypeName","src":"1368:7:113","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33096,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1410:7:113","nodeType":"VariableDeclaration","scope":33100,"src":"1402:15:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33098,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"1435:15:113","nodeType":"VariableDeclaration","scope":33100,"src":"1427:23:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1280:176:113"}},{"id":33111,"nodeType":"EventDefinition","src":"1537:111:113","nodes":[],"anonymous":false,"documentation":{"id":33101,"nodeType":"StructuredDocumentation","src":"1463:69:113","text":"@notice Emitted when the contract's claim conditions are updated."},"eventSelector":"066f72a648b18490c0bc4ab07d508cdb5d6589fa188c63cfba1e0547f3a6556a","name":"ClaimConditionsUpdated","nameLocation":"1543:22:113","parameters":{"id":33110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33103,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1582:7:113","nodeType":"VariableDeclaration","scope":33111,"src":"1566:23:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33107,"indexed":false,"mutability":"mutable","name":"claimConditions","nameLocation":"1608:15:113","nodeType":"VariableDeclaration","scope":33111,"src":"1591:32:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$32779_memory_ptr_$dyn_memory_ptr","typeString":"struct IClaimCondition.ClaimCondition[]"},"typeName":{"baseType":{"id":33105,"nodeType":"UserDefinedTypeName","pathNode":{"id":33104,"name":"ClaimCondition","nameLocations":["1591:14:113"],"nodeType":"IdentifierPath","referencedDeclaration":32779,"src":"1591:14:113"},"referencedDeclaration":32779,"src":"1591:14:113","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$32779_storage_ptr","typeString":"struct IClaimCondition.ClaimCondition"}},"id":33106,"nodeType":"ArrayTypeName","src":"1591:16:113","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$32779_storage_$dyn_storage_ptr","typeString":"struct IClaimCondition.ClaimCondition[]"}},"visibility":"internal"},{"constant":false,"id":33109,"indexed":false,"mutability":"mutable","name":"resetEligibility","nameLocation":"1630:16:113","nodeType":"VariableDeclaration","scope":33111,"src":"1625:21:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33108,"name":"bool","nodeType":"ElementaryTypeName","src":"1625:4:113","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1565:82:113"}},{"id":33130,"nodeType":"FunctionDefinition","src":"2480:247:113","nodes":[],"documentation":{"id":33112,"nodeType":"StructuredDocumentation","src":"1654:821:113","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param tokenId                        The tokenId of the NFT to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."},"functionSelector":"57bc3d78","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"2489:5:113","parameters":{"id":33128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33114,"mutability":"mutable","name":"receiver","nameLocation":"2512:8:113","nodeType":"VariableDeclaration","scope":33130,"src":"2504:16:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33113,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:113","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33116,"mutability":"mutable","name":"tokenId","nameLocation":"2538:7:113","nodeType":"VariableDeclaration","scope":33130,"src":"2530:15:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33118,"mutability":"mutable","name":"quantity","nameLocation":"2563:8:113","nodeType":"VariableDeclaration","scope":33130,"src":"2555:16:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2555:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33120,"mutability":"mutable","name":"currency","nameLocation":"2589:8:113","nodeType":"VariableDeclaration","scope":33130,"src":"2581:16:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33119,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:113","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33122,"mutability":"mutable","name":"pricePerToken","nameLocation":"2615:13:113","nodeType":"VariableDeclaration","scope":33130,"src":"2607:21:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33125,"mutability":"mutable","name":"allowlistProof","nameLocation":"2662:14:113","nodeType":"VariableDeclaration","scope":33130,"src":"2638:38:113","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$33087_calldata_ptr","typeString":"struct IDrop1155.AllowlistProof"},"typeName":{"id":33124,"nodeType":"UserDefinedTypeName","pathNode":{"id":33123,"name":"AllowlistProof","nameLocations":["2638:14:113"],"nodeType":"IdentifierPath","referencedDeclaration":33087,"src":"2638:14:113"},"referencedDeclaration":33087,"src":"2638:14:113","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$33087_storage_ptr","typeString":"struct IDrop1155.AllowlistProof"}},"visibility":"internal"},{"constant":false,"id":33127,"mutability":"mutable","name":"data","nameLocation":"2699:4:113","nodeType":"VariableDeclaration","scope":33130,"src":"2686:17:113","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33126,"name":"bytes","nodeType":"ElementaryTypeName","src":"2686:5:113","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2494:215:113"},"returnParameters":{"id":33129,"nodeType":"ParameterList","parameters":[],"src":"2726:0:113"},"scope":33143,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":33142,"nodeType":"FunctionDefinition","src":"3273:116:113","nodes":[],"documentation":{"id":33131,"nodeType":"StructuredDocumentation","src":"2733:535:113","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param tokenId                  The token ID for which to set mint conditions.\n  @param phases                   Claim conditions in ascending order by `startTimestamp`.\n  @param resetClaimEligibility    Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,\n                                  in the new claim conditions being set."},"functionSelector":"183718d1","implemented":false,"kind":"function","modifiers":[],"name":"setClaimConditions","nameLocation":"3282:18:113","parameters":{"id":33140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33133,"mutability":"mutable","name":"tokenId","nameLocation":"3309:7:113","nodeType":"VariableDeclaration","scope":33142,"src":"3301:15:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33137,"mutability":"mutable","name":"phases","nameLocation":"3344:6:113","nodeType":"VariableDeclaration","scope":33142,"src":"3318:32:113","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$32779_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IClaimCondition.ClaimCondition[]"},"typeName":{"baseType":{"id":33135,"nodeType":"UserDefinedTypeName","pathNode":{"id":33134,"name":"ClaimCondition","nameLocations":["3318:14:113"],"nodeType":"IdentifierPath","referencedDeclaration":32779,"src":"3318:14:113"},"referencedDeclaration":32779,"src":"3318:14:113","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$32779_storage_ptr","typeString":"struct IClaimCondition.ClaimCondition"}},"id":33136,"nodeType":"ArrayTypeName","src":"3318:16:113","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$32779_storage_$dyn_storage_ptr","typeString":"struct IClaimCondition.ClaimCondition[]"}},"visibility":"internal"},{"constant":false,"id":33139,"mutability":"mutable","name":"resetClaimEligibility","nameLocation":"3357:21:113","nodeType":"VariableDeclaration","scope":33142,"src":"3352:26:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33138,"name":"bool","nodeType":"ElementaryTypeName","src":"3352:4:113","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3300:79:113"},"returnParameters":{"id":33141,"nodeType":"ParameterList","parameters":[],"src":"3388:0:113"},"scope":33143,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":33075,"name":"IClaimConditionMultiPhase","nameLocations":["602:25:113"],"nodeType":"IdentifierPath","referencedDeclaration":32804,"src":"602:25:113"},"id":33076,"nodeType":"InheritanceSpecifier","src":"602:25:113"}],"canonicalName":"IDrop1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":33074,"nodeType":"StructuredDocumentation","src":"129:448:113","text":"  The interface `IDrop1155` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."},"fullyImplemented":false,"linearizedBaseContracts":[33143,32804,32780],"name":"IDrop1155","nameLocation":"589:9:113","scope":33144,"usedErrors":[],"usedEvents":[33100,33111]}],"license":"Apache-2.0"},"id":113}