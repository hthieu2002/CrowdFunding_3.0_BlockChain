{"abi":[{"type":"function","name":"getBaseURICount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBatchIdAtIndex","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lazyMint","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_baseURIForTokens","type":"string","internalType":"string"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"batchId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"TokensLazyMinted","inputs":[{"name":"startTokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"endTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"baseURI","type":"string","indexed":false,"internalType":"string"},{"name":"encryptedBaseURI","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getBaseURICount()":"63b45e2d","getBatchIdAtIndex(uint256)":"2419f51b","lazyMint(uint256,string,bytes)":"d37c353b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"}},\"kind\":\"dev\",\"methods\":{\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"}},\"notice\":\"The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually  minting a non-zero balance of NFTs of those tokenIds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/LazyMint_V1.sol\":\"LazyMint_V1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"contracts/legacy-contracts/extension/BatchMintMetadata_V1.sol\":{\"keccak256\":\"0xa97c714c00db94510c3064171653c21469e0a6555be6d234b71c330f77801892\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91009a3ccb9d841ca68f304d2a0a5e8cef61bc0484ff051f8c3f8893f6243fc2\",\"dweb:/ipfs/QmY76M6gS1SsjHgGiX2UsPVibssxEbheV21AnNshJmrq4q\"]},\"contracts/legacy-contracts/extension/LazyMint_V1.sol\":{\"keccak256\":\"0x844d07f689a630f5d070d2b5eda7e5109c4ae3d41ff61a1c83b6062102897847\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://91701ef20ab07c008a0366a9b45a0f05f142fb75f112add639100bcac4d2765f\",\"dweb:/ipfs/QmVZNe3d8rL5VWweQkBnne8QQgd3ez25dgRt9m4BzLVpZB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"endTokenId","type":"uint256","indexed":false},{"internalType":"string","name":"baseURI","type":"string","indexed":false},{"internalType":"bytes","name":"encryptedBaseURI","type":"bytes","indexed":false}],"type":"event","name":"TokensLazyMinted","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getBaseURICount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBatchIdAtIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_baseURIForTokens","type":"string"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lazyMint","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getBaseURICount()":{"details":"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."},"getBatchIdAtIndex(uint256)":{"details":"See {getBaseURICount}.","params":{"_index":"Index of the desired batch in batchIds array."}},"lazyMint(uint256,string,bytes)":{"params":{"_amount":"The number of NFTs to lazy mint.","_baseURIForTokens":"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.","_data":"Additional bytes data to be used at the discretion of the consumer of the contract."},"returns":{"batchId":"         A unique integer identifier for the batch of NFTs lazy minted together."}}},"version":1},"userdoc":{"kind":"user","methods":{"getBaseURICount()":{"notice":"Returns the count of batches of NFTs."},"getBatchIdAtIndex(uint256)":{"notice":"Returns the ID for the batch of tokens at the given index."},"lazyMint(uint256,string,bytes)":{"notice":"Lets an authorized address lazy mint a given amount of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/extension/LazyMint_V1.sol":"LazyMint_V1"},"libraries":{}},"sources":{"contracts/extension/interface/ILazyMint.sol":{"keccak256":"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec","urls":["bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3","dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"],"license":"Apache-2.0"},"contracts/legacy-contracts/extension/BatchMintMetadata_V1.sol":{"keccak256":"0xa97c714c00db94510c3064171653c21469e0a6555be6d234b71c330f77801892","urls":["bzz-raw://91009a3ccb9d841ca68f304d2a0a5e8cef61bc0484ff051f8c3f8893f6243fc2","dweb:/ipfs/QmY76M6gS1SsjHgGiX2UsPVibssxEbheV21AnNshJmrq4q"],"license":"Apache-2.0"},"contracts/legacy-contracts/extension/LazyMint_V1.sol":{"keccak256":"0x844d07f689a630f5d070d2b5eda7e5109c4ae3d41ff61a1c83b6062102897847","urls":["bzz-raw://91701ef20ab07c008a0366a9b45a0f05f142fb75f112add639100bcac4d2765f","dweb:/ipfs/QmVZNe3d8rL5VWweQkBnne8QQgd3ez25dgRt9m4BzLVpZB"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/extension/LazyMint_V1.sol","id":57536,"exportedSymbols":{"BatchMintMetadata_V1":[56000],"ILazyMint":[33312],"LazyMint_V1":[57535]},"nodeType":"SourceUnit","src":"39:1991:271","nodes":[{"id":57459,"nodeType":"PragmaDirective","src":"39:23:271","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":57460,"nodeType":"ImportDirective","src":"86:49:271","nodes":[],"absolutePath":"contracts/extension/interface/ILazyMint.sol","file":"../../extension/interface/ILazyMint.sol","nameLocation":"-1:-1:-1","scope":57536,"sourceUnit":33313,"symbolAliases":[],"unitAlias":""},{"id":57461,"nodeType":"ImportDirective","src":"136:36:271","nodes":[],"absolutePath":"contracts/legacy-contracts/extension/BatchMintMetadata_V1.sol","file":"./BatchMintMetadata_V1.sol","nameLocation":"-1:-1:-1","scope":57536,"sourceUnit":56001,"symbolAliases":[],"unitAlias":""},{"id":57535,"nodeType":"ContractDefinition","src":"476:1553:271","nodes":[{"id":57469,"nodeType":"VariableDeclaration","src":"623:38:271","nodes":[],"constant":false,"documentation":{"id":57467,"nodeType":"StructuredDocumentation","src":"547:71:271","text":"@notice The tokenId assigned to the next new NFT to be lazy minted."},"mutability":"mutable","name":"nextTokenIdToLazyMint","nameLocation":"640:21:271","scope":57535,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57468,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":57528,"nodeType":"FunctionDefinition","src":"1277:592:271","nodes":[],"body":{"id":57527,"nodeType":"Block","src":"1449:420:271","nodes":[],"statements":[{"condition":{"id":57484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1463:15:271","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":57482,"name":"_canLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57534,"src":"1464:12:271","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":57483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:14:271","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":57490,"nodeType":"IfStatement","src":"1459:70:271","trueBody":{"id":57489,"nodeType":"Block","src":"1480:49:271","statements":[{"expression":{"arguments":[{"hexValue":"4e6f7420617574686f72697a6564","id":57486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1501:16:271","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":57485,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1494:6:271","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":57487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:24:271","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57488,"nodeType":"ExpressionStatement","src":"1494:24:271"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":57493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":57491,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57472,"src":"1543:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":57492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1554:1:271","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1543:12:271","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":57499,"nodeType":"IfStatement","src":"1539:58:271","trueBody":{"id":57498,"nodeType":"Block","src":"1557:40:271","statements":[{"expression":{"arguments":[{"hexValue":"3020616d74","id":57495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:7:271","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a2ffc405bd01b6d581e1962140c15d8313f08001cf89458c30107c60719bf0","typeString":"literal_string \"0 amt\""},"value":"0 amt"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_48a2ffc405bd01b6d581e1962140c15d8313f08001cf89458c30107c60719bf0","typeString":"literal_string \"0 amt\""}],"id":57494,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1571:6:271","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":57496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1571:15:271","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57497,"nodeType":"ExpressionStatement","src":"1571:15:271"}]}},{"assignments":[57501],"declarations":[{"constant":false,"id":57501,"mutability":"mutable","name":"startId","nameLocation":"1615:7:271","nodeType":"VariableDeclaration","scope":57527,"src":"1607:15:271","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":57503,"initialValue":{"id":57502,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57469,"src":"1625:21:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1607:39:271"},{"expression":{"id":57512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":57504,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57469,"src":"1658:21:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":57505,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57480,"src":"1681:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":57506,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1657:32:271","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":57508,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57501,"src":"1711:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":57509,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57472,"src":"1720:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":57510,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57474,"src":"1729:17:271","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":57507,"name":"_batchMintMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55999,"src":"1692:18:271","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,string memory) returns (uint256,uint256)"}},"id":57511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1692:55:271","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"1657:90:271","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57513,"nodeType":"ExpressionStatement","src":"1657:90:271"},{"eventCall":{"arguments":[{"id":57515,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57501,"src":"1780:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":57520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":57518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":57516,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57501,"src":"1789:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":57517,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57472,"src":"1799:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1789:17:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":57519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:271","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1789:21:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":57521,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57474,"src":"1812:17:271","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":57522,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57476,"src":"1831:5:271","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":57514,"name":"TokensLazyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33299,"src":"1763:16:271","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory,bytes memory)"}},"id":57523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1763:74:271","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57524,"nodeType":"EmitStatement","src":"1758:79:271"},{"expression":{"id":57525,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57480,"src":"1855:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":57481,"id":57526,"nodeType":"Return","src":"1848:14:271"}]},"baseFunctions":[33311],"documentation":{"id":57470,"nodeType":"StructuredDocumentation","src":"668:604:271","text":"  @notice                  Lets an authorized address lazy mint a given amount of NFTs.\n  @param _amount           The number of NFTs to lazy mint.\n  @param _baseURIForTokens The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each\n                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\n  @param _data             Additional bytes data to be used at the discretion of the consumer of the contract.\n  @return batchId          A unique integer identifier for the batch of NFTs lazy minted together."},"functionSelector":"d37c353b","implemented":true,"kind":"function","modifiers":[],"name":"lazyMint","nameLocation":"1286:8:271","overrides":{"id":57478,"nodeType":"OverrideSpecifier","overrides":[],"src":"1414:8:271"},"parameters":{"id":57477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57472,"mutability":"mutable","name":"_amount","nameLocation":"1312:7:271","nodeType":"VariableDeclaration","scope":57528,"src":"1304:15:271","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57474,"mutability":"mutable","name":"_baseURIForTokens","nameLocation":"1345:17:271","nodeType":"VariableDeclaration","scope":57528,"src":"1329:33:271","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":57473,"name":"string","nodeType":"ElementaryTypeName","src":"1329:6:271","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":57476,"mutability":"mutable","name":"_data","nameLocation":"1387:5:271","nodeType":"VariableDeclaration","scope":57528,"src":"1372:20:271","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":57475,"name":"bytes","nodeType":"ElementaryTypeName","src":"1372:5:271","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1294:104:271"},"returnParameters":{"id":57481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57480,"mutability":"mutable","name":"batchId","nameLocation":"1440:7:271","nodeType":"VariableDeclaration","scope":57528,"src":"1432:15:271","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1432:7:271","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1431:17:271"},"scope":57535,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":57534,"nodeType":"FunctionDefinition","src":"1966:61:271","nodes":[],"documentation":{"id":57529,"nodeType":"StructuredDocumentation","src":"1875:86:271","text":"@dev Returns whether lazy minting can be performed in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canLazyMint","nameLocation":"1975:12:271","parameters":{"id":57530,"nodeType":"ParameterList","parameters":[],"src":"1987:2:271"},"returnParameters":{"id":57533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57534,"src":"2021:4:271","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":57531,"name":"bool","nodeType":"ElementaryTypeName","src":"2021:4:271","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2020:6:271"},"scope":57535,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":57463,"name":"ILazyMint","nameLocations":["509:9:271"],"nodeType":"IdentifierPath","referencedDeclaration":33312,"src":"509:9:271"},"id":57464,"nodeType":"InheritanceSpecifier","src":"509:9:271"},{"baseName":{"id":57465,"name":"BatchMintMetadata_V1","nameLocations":["520:20:271"],"nodeType":"IdentifierPath","referencedDeclaration":56000,"src":"520:20:271"},"id":57466,"nodeType":"InheritanceSpecifier","src":"520:20:271"}],"canonicalName":"LazyMint_V1","contractDependencies":[],"contractKind":"contract","documentation":{"id":57462,"nodeType":"StructuredDocumentation","src":"174:300:271","text":"  The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs\n  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually\n  minting a non-zero balance of NFTs of those tokenIds."},"fullyImplemented":false,"linearizedBaseContracts":[57535,56000,33312],"name":"LazyMint_V1","nameLocation":"494:11:271","scope":57536,"usedErrors":[],"usedEvents":[33299]}],"license":"Apache-2.0"},"id":271}