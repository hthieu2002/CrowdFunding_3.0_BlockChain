{"abi":[{"type":"function","name":"contractURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setContractURI","inputs":[{"name":"_uri","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractURIUpdated","inputs":[{"name":"prevURI","type":"string","indexed":false,"internalType":"string"},{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"title\":\"Contract Metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI           for you contract.           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/ContractMetadata.sol\":\"ContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"prevURI","type":"string","indexed":false},{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"ContractURIUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"}],"devdoc":{"kind":"dev","methods":{"setContractURI(string)":{"details":"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.","params":{"_uri":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"contractURI()":{"notice":"Returns the contract metadata URI."},"setContractURI(string)":{"notice":"Lets a contract admin set the URI for contract-level metadata."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/ContractMetadata.sol":"ContractMetadata"},"libraries":{}},"sources":{"contracts/extension/ContractMetadata.sol":{"keccak256":"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe","urls":["bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392","dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"],"license":"Apache-2.0"},"contracts/extension/interface/IContractMetadata.sol":{"keccak256":"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2","urls":["bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a","dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/ContractMetadata.sol","id":17987,"exportedSymbols":{"ContractMetadata":[17986],"IContractMetadata":[32933]},"nodeType":"SourceUnit","src":"39:1585:56","nodes":[{"id":17930,"nodeType":"PragmaDirective","src":"39:23:56","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":17931,"nodeType":"ImportDirective","src":"86:43:56","nodes":[],"absolutePath":"contracts/extension/interface/IContractMetadata.sol","file":"./interface/IContractMetadata.sol","nameLocation":"-1:-1:-1","scope":17987,"sourceUnit":32934,"symbolAliases":[],"unitAlias":""},{"id":17986,"nodeType":"ContractDefinition","src":"452:1171:56","nodes":[{"id":17938,"nodeType":"VariableDeclaration","src":"565:34:56","nodes":[],"baseFunctions":[32919],"constant":false,"documentation":{"id":17935,"nodeType":"StructuredDocumentation","src":"514:46:56","text":"@notice Returns the contract metadata URI."},"functionSelector":"e8a3d485","mutability":"mutable","name":"contractURI","nameLocation":"588:11:56","overrides":{"id":17937,"nodeType":"OverrideSpecifier","overrides":[],"src":"579:8:56"},"scope":17986,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":17936,"name":"string","nodeType":"ElementaryTypeName","src":"565:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"id":17959,"nodeType":"FunctionDefinition","src":"1003:188:56","nodes":[],"body":{"id":17958,"nodeType":"Block","src":"1065:126:56","nodes":[],"statements":[{"condition":{"id":17947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1079:21:56","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":17945,"name":"_canSetContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17985,"src":"1080:18:56","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":17946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:20:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17953,"nodeType":"IfStatement","src":"1075:76:56","trueBody":{"id":17952,"nodeType":"Block","src":"1102:49:56","statements":[{"expression":{"arguments":[{"hexValue":"4e6f7420617574686f72697a6564","id":17949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1123:16:56","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":17948,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1116:6:56","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":17950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:24:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17951,"nodeType":"ExpressionStatement","src":"1116:24:56"}]}},{"expression":{"arguments":[{"id":17955,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17941,"src":"1179:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":17954,"name":"_setupContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17979,"src":"1161:17:56","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":17956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1161:23:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17957,"nodeType":"ExpressionStatement","src":"1161:23:56"}]},"baseFunctions":[32925],"documentation":{"id":17939,"nodeType":"StructuredDocumentation","src":"606:392:56","text":"  @notice         Lets a contract admin set the URI for contract-level metadata.\n  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n                  See {_canSetContractURI}.\n                  Emits {ContractURIUpdated Event}.\n  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"},"functionSelector":"938e3d7b","implemented":true,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"1012:14:56","overrides":{"id":17943,"nodeType":"OverrideSpecifier","overrides":[],"src":"1056:8:56"},"parameters":{"id":17942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17941,"mutability":"mutable","name":"_uri","nameLocation":"1041:4:56","nodeType":"VariableDeclaration","scope":17959,"src":"1027:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17940,"name":"string","nodeType":"ElementaryTypeName","src":"1027:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1026:20:56"},"returnParameters":{"id":17944,"nodeType":"ParameterList","parameters":[],"src":"1065:0:56"},"scope":17986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17979,"nodeType":"FunctionDefinition","src":"1273:185:56","nodes":[],"body":{"id":17978,"nodeType":"Block","src":"1329:129:56","nodes":[],"statements":[{"assignments":[17966],"declarations":[{"constant":false,"id":17966,"mutability":"mutable","name":"prevURI","nameLocation":"1353:7:56","nodeType":"VariableDeclaration","scope":17978,"src":"1339:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17965,"name":"string","nodeType":"ElementaryTypeName","src":"1339:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":17968,"initialValue":{"id":17967,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17938,"src":"1363:11:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1339:35:56"},{"expression":{"id":17971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":17969,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17938,"src":"1384:11:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17970,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17962,"src":"1398:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1384:18:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":17972,"nodeType":"ExpressionStatement","src":"1384:18:56"},{"eventCall":{"arguments":[{"id":17974,"name":"prevURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17966,"src":"1437:7:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":17975,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17962,"src":"1446:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":17973,"name":"ContractURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32932,"src":"1418:18:56","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":17976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:33:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":17977,"nodeType":"EmitStatement","src":"1413:38:56"}]},"documentation":{"id":17960,"nodeType":"StructuredDocumentation","src":"1197:71:56","text":"@dev Lets a contract admin set the URI for contract-level metadata."},"implemented":true,"kind":"function","modifiers":[],"name":"_setupContractURI","nameLocation":"1282:17:56","parameters":{"id":17963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17962,"mutability":"mutable","name":"_uri","nameLocation":"1314:4:56","nodeType":"VariableDeclaration","scope":17979,"src":"1300:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17961,"name":"string","nodeType":"ElementaryTypeName","src":"1300:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1299:20:56"},"returnParameters":{"id":17964,"nodeType":"ParameterList","parameters":[],"src":"1329:0:56"},"scope":17986,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":17985,"nodeType":"FunctionDefinition","src":"1554:67:56","nodes":[],"documentation":{"id":17980,"nodeType":"StructuredDocumentation","src":"1464:85:56","text":"@dev Returns whether contract metadata can be set in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canSetContractURI","nameLocation":"1563:18:56","parameters":{"id":17981,"nodeType":"ParameterList","parameters":[],"src":"1581:2:56"},"returnParameters":{"id":17984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17985,"src":"1615:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17982,"name":"bool","nodeType":"ElementaryTypeName","src":"1615:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1614:6:56"},"scope":17986,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":17933,"name":"IContractMetadata","nameLocations":["490:17:56"],"nodeType":"IdentifierPath","referencedDeclaration":32933,"src":"490:17:56"},"id":17934,"nodeType":"InheritanceSpecifier","src":"490:17:56"}],"canonicalName":"ContractMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":17932,"nodeType":"StructuredDocumentation","src":"131:319:56","text":"  @title   Contract Metadata\n  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n           for you contract.\n           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"linearizedBaseContracts":[17986,32933],"name":"ContractMetadata","nameLocation":"470:16:56","scope":17987,"usedErrors":[],"usedEvents":[32932]}],"license":"Apache-2.0"},"id":56}