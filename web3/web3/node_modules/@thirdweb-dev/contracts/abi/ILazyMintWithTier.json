{"abi":[{"type":"function","name":"lazyMint","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"baseURIForTokens","type":"string","internalType":"string"},{"name":"tier","type":"string","internalType":"string"},{"name":"extraData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"batchId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"TokensLazyMinted","inputs":[{"name":"tier","type":"string","indexed":true,"internalType":"string"},{"name":"startTokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"endTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"baseURI","type":"string","indexed":false,"internalType":"string"},{"name":"encryptedBaseURI","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"lazyMint(uint256,string,string,bytes)":"e28411ea"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"tier\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tier\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensLazyMinted(string,uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"}},\"kind\":\"dev\",\"methods\":{\"lazyMint(uint256,string,string,bytes)\":{\"params\":{\"amount\":\"The number of NFTs to lazy mint.\",\"baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                          of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"extraData\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\",\"tier\":\"The tier for which these tokens are being lazy mitned. Here, `tier` is a unique string label                          that is used to group together different batches of lazy minted tokens under a common category.\"},\"returns\":{\"batchId\":\"        A unique integer identifier for the batch of NFTs lazy minted together.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lazyMint(uint256,string,string,bytes)\":{\"notice\":\"Lazy mints a given amount of NFTs.\"}},\"notice\":\"Thirdweb's `LazyMintWithTier` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs  at once, for a particular tier. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract,  without actually minting a non-zero balance of NFTs of those tokenIds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/ILazyMintWithTier.sol\":\"ILazyMintWithTier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/ILazyMintWithTier.sol\":{\"keccak256\":\"0x5289a851e3d011003c08ab4fb2eb88670492f55f10d956a99cabfe786cbe1c0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://351c11112ee7a1d91af1b8cfc28014c0c8eddb8d16e4ac0d8dafd29d82857f55\",\"dweb:/ipfs/QmYxrySjcq67Hi5gNbUvnWeavT8BavdUbumpvU3yXiRpVh\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"tier","type":"string","indexed":true},{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"endTokenId","type":"uint256","indexed":false},{"internalType":"string","name":"baseURI","type":"string","indexed":false},{"internalType":"bytes","name":"encryptedBaseURI","type":"bytes","indexed":false}],"type":"event","name":"TokensLazyMinted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"baseURIForTokens","type":"string"},{"internalType":"string","name":"tier","type":"string"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lazyMint","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"lazyMint(uint256,string,string,bytes)":{"params":{"amount":"The number of NFTs to lazy mint.","baseURIForTokens":"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                          of those NFTs is `${baseURIForTokens}/${tokenId}`.","extraData":"Additional bytes data to be used at the discretion of the consumer of the contract.","tier":"The tier for which these tokens are being lazy mitned. Here, `tier` is a unique string label                          that is used to group together different batches of lazy minted tokens under a common category."},"returns":{"batchId":"        A unique integer identifier for the batch of NFTs lazy minted together."}}},"version":1},"userdoc":{"kind":"user","methods":{"lazyMint(uint256,string,string,bytes)":{"notice":"Lazy mints a given amount of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/interface/ILazyMintWithTier.sol":"ILazyMintWithTier"},"libraries":{}},"sources":{"contracts/extension/interface/ILazyMintWithTier.sol":{"keccak256":"0x5289a851e3d011003c08ab4fb2eb88670492f55f10d956a99cabfe786cbe1c0d","urls":["bzz-raw://351c11112ee7a1d91af1b8cfc28014c0c8eddb8d16e4ac0d8dafd29d82857f55","dweb:/ipfs/QmYxrySjcq67Hi5gNbUvnWeavT8BavdUbumpvU3yXiRpVh"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/interface/ILazyMintWithTier.sol","id":33344,"exportedSymbols":{"ILazyMintWithTier":[33343]},"nodeType":"SourceUnit","src":"39:1691:118","nodes":[{"id":33314,"nodeType":"PragmaDirective","src":"39:23:118","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":33343,"nodeType":"ContractDefinition","src":"426:1303:118","nodes":[{"id":33328,"nodeType":"EventDefinition","src":"510:180:118","nodes":[],"anonymous":false,"documentation":{"id":33316,"nodeType":"StructuredDocumentation","src":"460:45:118","text":"@dev Emitted when tokens are lazy minted."},"eventSelector":"1c15eb986df6edfe0f8a0432449c7ac55cc9b03dfb9b4c5175dc8fdbf270c6f5","name":"TokensLazyMinted","nameLocation":"516:16:118","parameters":{"id":33327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33318,"indexed":true,"mutability":"mutable","name":"tier","nameLocation":"557:4:118","nodeType":"VariableDeclaration","scope":33328,"src":"542:19:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33317,"name":"string","nodeType":"ElementaryTypeName","src":"542:6:118","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33320,"indexed":true,"mutability":"mutable","name":"startTokenId","nameLocation":"587:12:118","nodeType":"VariableDeclaration","scope":33328,"src":"571:28:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33319,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33322,"indexed":false,"mutability":"mutable","name":"endTokenId","nameLocation":"617:10:118","nodeType":"VariableDeclaration","scope":33328,"src":"609:18:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33321,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33324,"indexed":false,"mutability":"mutable","name":"baseURI","nameLocation":"644:7:118","nodeType":"VariableDeclaration","scope":33328,"src":"637:14:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33323,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:118","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33326,"indexed":false,"mutability":"mutable","name":"encryptedBaseURI","nameLocation":"667:16:118","nodeType":"VariableDeclaration","scope":33328,"src":"661:22:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":33325,"name":"bytes","nodeType":"ElementaryTypeName","src":"661:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"532:157:118"}},{"id":33342,"nodeType":"FunctionDefinition","src":"1538:189:118","nodes":[],"documentation":{"id":33329,"nodeType":"StructuredDocumentation","src":"696:837:118","text":"  @notice Lazy mints a given amount of NFTs.\n  @param amount           The number of NFTs to lazy mint.\n  @param baseURIForTokens The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each\n                          of those NFTs is `${baseURIForTokens}/${tokenId}`.\n  @param tier             The tier for which these tokens are being lazy mitned. Here, `tier` is a unique string label\n                          that is used to group together different batches of lazy minted tokens under a common category.\n  @param extraData        Additional bytes data to be used at the discretion of the consumer of the contract.\n  @return batchId         A unique integer identifier for the batch of NFTs lazy minted together."},"functionSelector":"e28411ea","implemented":false,"kind":"function","modifiers":[],"name":"lazyMint","nameLocation":"1547:8:118","parameters":{"id":33338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33331,"mutability":"mutable","name":"amount","nameLocation":"1573:6:118","nodeType":"VariableDeclaration","scope":33342,"src":"1565:14:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":33333,"mutability":"mutable","name":"baseURIForTokens","nameLocation":"1605:16:118","nodeType":"VariableDeclaration","scope":33342,"src":"1589:32:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33332,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:118","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33335,"mutability":"mutable","name":"tier","nameLocation":"1647:4:118","nodeType":"VariableDeclaration","scope":33342,"src":"1631:20:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33334,"name":"string","nodeType":"ElementaryTypeName","src":"1631:6:118","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33337,"mutability":"mutable","name":"extraData","nameLocation":"1676:9:118","nodeType":"VariableDeclaration","scope":33342,"src":"1661:24:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":33336,"name":"bytes","nodeType":"ElementaryTypeName","src":"1661:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1555:136:118"},"returnParameters":{"id":33341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33340,"mutability":"mutable","name":"batchId","nameLocation":"1718:7:118","nodeType":"VariableDeclaration","scope":33342,"src":"1710:15:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1709:17:118"},"scope":33343,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ILazyMintWithTier","contractDependencies":[],"contractKind":"interface","documentation":{"id":33315,"nodeType":"StructuredDocumentation","src":"86:338:118","text":"  Thirdweb's `LazyMintWithTier` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs\n  at once, for a particular tier. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract,\n  without actually minting a non-zero balance of NFTs of those tokenIds."},"fullyImplemented":false,"linearizedBaseContracts":[33343],"name":"ILazyMintWithTier","nameLocation":"436:17:118","scope":33344,"usedErrors":[],"usedEvents":[33328]}],"license":"Apache-2.0"},"id":118}