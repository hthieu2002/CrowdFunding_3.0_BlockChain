{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"allowlistProof","type":"tuple","internalType":"struct IDropSinglePhase1155_V1.AllowlistProof","components":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"maxQuantityInAllowlist","type":"uint256","internalType":"uint256"}]},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setClaimConditions","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"phase","type":"tuple","internalType":"struct IClaimCondition_V1.ClaimCondition","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetClaimEligibility","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ClaimConditionUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"condition","type":"tuple","indexed":false,"internalType":"struct IClaimCondition_V1.ClaimCondition","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetEligibility","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)":"27db5f08","setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":"32df1279"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase1155_V1.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"phase\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimConditionUpdated(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of the NFT to claim.\",\"receiver\":\"The receiver of the NFT to claim.\",\"tokenId\":\"The tokenId of the NFT to claim.\"}},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"params\":{\"phase\":\"Claim condition to set.\",\"resetClaimEligibility\":\"Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions.\",\"tokenId\":\"The tokenId for which to set the relevant claim condition.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol\":\"IDropSinglePhase1155_V1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6\",\"dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX\"]},\"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol\":{\"keccak256\":\"0x6a9a462854686856de5f0e50aa8e78b0db397ae6ed783fb1669967ffea63e5e7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23da73f0aa6284951f55f938e83a69493e374af76a06d3004b26309ac7c1194a\",\"dweb:/ipfs/QmZH1yeRBQPvN4KPAiqihdPeisauf3b6QUKC4kN6jdr8Pz\"]},\"contracts/lib/BitMaps.sol\":{\"keccak256\":\"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d\",\"dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"struct IClaimCondition_V1.ClaimCondition","name":"condition","type":"tuple","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}],"indexed":false},{"internalType":"bool","name":"resetEligibility","type":"bool","indexed":false}],"type":"event","name":"ClaimConditionUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"struct IDropSinglePhase1155_V1.AllowlistProof","name":"allowlistProof","type":"tuple","components":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"uint256","name":"maxQuantityInAllowlist","type":"uint256"}]},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"claim"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"struct IClaimCondition_V1.ClaimCondition","name":"phase","type":"tuple","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}]},{"internalType":"bool","name":"resetClaimEligibility","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setClaimConditions"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)":{"params":{"allowlistProof":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","currency":"The currency in which to pay for the claim.","data":"Arbitrary bytes data that can be leveraged in the implementation of this interface.","pricePerToken":"The price per token to pay for the claim.","quantity":"The quantity of the NFT to claim.","receiver":"The receiver of the NFT to claim.","tokenId":"The tokenId of the NFT to claim."}},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":{"params":{"phase":"Claim condition to set.","resetClaimEligibility":"Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions.","tokenId":"The tokenId for which to set the relevant claim condition."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,uint256,address,uint256,(bytes32[],uint256),bytes)":{"notice":"Lets an account claim a given quantity of NFTs."},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol":"IDropSinglePhase1155_V1"},"libraries":{}},"sources":{"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol":{"keccak256":"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452","urls":["bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6","dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX"],"license":"Apache-2.0"},"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol":{"keccak256":"0x6a9a462854686856de5f0e50aa8e78b0db397ae6ed783fb1669967ffea63e5e7","urls":["bzz-raw://23da73f0aa6284951f55f938e83a69493e374af76a06d3004b26309ac7c1194a","dweb:/ipfs/QmZH1yeRBQPvN4KPAiqihdPeisauf3b6QUKC4kN6jdr8Pz"],"license":"Apache-2.0"},"contracts/lib/BitMaps.sol":{"keccak256":"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17","urls":["bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d","dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/extension/interface/IDropSinglePhase1155_V1.sol","id":57890,"exportedSymbols":{"BitMaps":[64751],"IClaimCondition_V1":[57826],"IDropSinglePhase1155_V1":[57889]},"nodeType":"SourceUnit","src":"39:2333:275","nodes":[{"id":57828,"nodeType":"PragmaDirective","src":"39:23:275","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":57829,"nodeType":"ImportDirective","src":"86:34:275","nodes":[],"absolutePath":"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol","file":"./IClaimCondition_V1.sol","nameLocation":"-1:-1:-1","scope":57890,"sourceUnit":57827,"symbolAliases":[],"unitAlias":""},{"id":57889,"nodeType":"ContractDefinition","src":"122:2249:275","nodes":[{"id":57837,"nodeType":"StructDefinition","src":"184:94:275","nodes":[],"canonicalName":"IDropSinglePhase1155_V1.AllowlistProof","members":[{"constant":false,"id":57834,"mutability":"mutable","name":"proof","nameLocation":"226:5:275","nodeType":"VariableDeclaration","scope":57837,"src":"216:15:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":57832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"216:7:275","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":57833,"nodeType":"ArrayTypeName","src":"216:9:275","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":57836,"mutability":"mutable","name":"maxQuantityInAllowlist","nameLocation":"249:22:275","nodeType":"VariableDeclaration","scope":57837,"src":"241:30:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57835,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AllowlistProof","nameLocation":"191:14:275","scope":57889,"visibility":"public"},{"id":57848,"nodeType":"EventDefinition","src":"342:159:275","nodes":[],"anonymous":false,"documentation":{"id":57838,"nodeType":"StructuredDocumentation","src":"284:53:275","text":"@dev Emitted when tokens are claimed via `claim`."},"eventSelector":"ff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6","name":"TokensClaimed","nameLocation":"348:13:275","parameters":{"id":57847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57840,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"387:7:275","nodeType":"VariableDeclaration","scope":57848,"src":"371:23:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57839,"name":"address","nodeType":"ElementaryTypeName","src":"371:7:275","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57842,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"420:8:275","nodeType":"VariableDeclaration","scope":57848,"src":"404:24:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57841,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:275","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57844,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"454:7:275","nodeType":"VariableDeclaration","scope":57848,"src":"438:23:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57843,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57846,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"479:15:275","nodeType":"VariableDeclaration","scope":57848,"src":"471:23:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57845,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"361:139:275"}},{"id":57858,"nodeType":"EventDefinition","src":"578:102:275","nodes":[],"anonymous":false,"documentation":{"id":57849,"nodeType":"StructuredDocumentation","src":"507:66:275","text":"@dev Emitted when the contract's claim conditions are updated."},"eventSelector":"108e373025a2f7dad2e968ca6ce56d87eab1a9c17dc49817fee9e3da0dc9f8a1","name":"ClaimConditionUpdated","nameLocation":"584:21:275","parameters":{"id":57857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57851,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"622:7:275","nodeType":"VariableDeclaration","scope":57858,"src":"606:23:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57850,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57854,"indexed":false,"mutability":"mutable","name":"condition","nameLocation":"646:9:275","nodeType":"VariableDeclaration","scope":57858,"src":"631:24:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$57825_memory_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"},"typeName":{"id":57853,"nodeType":"UserDefinedTypeName","pathNode":{"id":57852,"name":"ClaimCondition","nameLocations":["631:14:275"],"nodeType":"IdentifierPath","referencedDeclaration":57825,"src":"631:14:275"},"referencedDeclaration":57825,"src":"631:14:275","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$57825_storage_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"}},"visibility":"internal"},{"constant":false,"id":57856,"indexed":false,"mutability":"mutable","name":"resetEligibility","nameLocation":"662:16:275","nodeType":"VariableDeclaration","scope":57858,"src":"657:21:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":57855,"name":"bool","nodeType":"ElementaryTypeName","src":"657:4:275","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"605:74:275"}},{"id":57877,"nodeType":"FunctionDefinition","src":"1514:247:275","nodes":[],"documentation":{"id":57859,"nodeType":"StructuredDocumentation","src":"686:823:275","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param tokenId                        The tokenId of the NFT to claim.\n  @param receiver                       The receiver of the NFT to claim.\n  @param quantity                       The quantity of the NFT to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."},"functionSelector":"27db5f08","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1523:5:275","parameters":{"id":57875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57861,"mutability":"mutable","name":"receiver","nameLocation":"1546:8:275","nodeType":"VariableDeclaration","scope":57877,"src":"1538:16:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57860,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:275","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57863,"mutability":"mutable","name":"tokenId","nameLocation":"1572:7:275","nodeType":"VariableDeclaration","scope":57877,"src":"1564:15:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57865,"mutability":"mutable","name":"quantity","nameLocation":"1597:8:275","nodeType":"VariableDeclaration","scope":57877,"src":"1589:16:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57867,"mutability":"mutable","name":"currency","nameLocation":"1623:8:275","nodeType":"VariableDeclaration","scope":57877,"src":"1615:16:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57866,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:275","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57869,"mutability":"mutable","name":"pricePerToken","nameLocation":"1649:13:275","nodeType":"VariableDeclaration","scope":57877,"src":"1641:21:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57872,"mutability":"mutable","name":"allowlistProof","nameLocation":"1696:14:275","nodeType":"VariableDeclaration","scope":57877,"src":"1672:38:275","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$57837_calldata_ptr","typeString":"struct IDropSinglePhase1155_V1.AllowlistProof"},"typeName":{"id":57871,"nodeType":"UserDefinedTypeName","pathNode":{"id":57870,"name":"AllowlistProof","nameLocations":["1672:14:275"],"nodeType":"IdentifierPath","referencedDeclaration":57837,"src":"1672:14:275"},"referencedDeclaration":57837,"src":"1672:14:275","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$57837_storage_ptr","typeString":"struct IDropSinglePhase1155_V1.AllowlistProof"}},"visibility":"internal"},{"constant":false,"id":57874,"mutability":"mutable","name":"data","nameLocation":"1733:4:275","nodeType":"VariableDeclaration","scope":57877,"src":"1720:17:275","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57873,"name":"bytes","nodeType":"ElementaryTypeName","src":"1720:5:275","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1528:215:275"},"returnParameters":{"id":57876,"nodeType":"ParameterList","parameters":[],"src":"1760:0:275"},"scope":57889,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":57888,"nodeType":"FunctionDefinition","src":"2256:113:275","nodes":[],"documentation":{"id":57878,"nodeType":"StructuredDocumentation","src":"1767:484:275","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phase                    Claim condition to set.\n  @param resetClaimEligibility    Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new\n                                  claim conditions.\n  @param tokenId                  The tokenId for which to set the relevant claim condition."},"functionSelector":"32df1279","implemented":false,"kind":"function","modifiers":[],"name":"setClaimConditions","nameLocation":"2265:18:275","parameters":{"id":57886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57880,"mutability":"mutable","name":"tokenId","nameLocation":"2292:7:275","nodeType":"VariableDeclaration","scope":57888,"src":"2284:15:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2284:7:275","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57883,"mutability":"mutable","name":"phase","nameLocation":"2325:5:275","nodeType":"VariableDeclaration","scope":57888,"src":"2301:29:275","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$57825_calldata_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"},"typeName":{"id":57882,"nodeType":"UserDefinedTypeName","pathNode":{"id":57881,"name":"ClaimCondition","nameLocations":["2301:14:275"],"nodeType":"IdentifierPath","referencedDeclaration":57825,"src":"2301:14:275"},"referencedDeclaration":57825,"src":"2301:14:275","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$57825_storage_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"}},"visibility":"internal"},{"constant":false,"id":57885,"mutability":"mutable","name":"resetClaimEligibility","nameLocation":"2337:21:275","nodeType":"VariableDeclaration","scope":57888,"src":"2332:26:275","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":57884,"name":"bool","nodeType":"ElementaryTypeName","src":"2332:4:275","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2283:76:275"},"returnParameters":{"id":57887,"nodeType":"ParameterList","parameters":[],"src":"2368:0:275"},"scope":57889,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":57830,"name":"IClaimCondition_V1","nameLocations":["159:18:275"],"nodeType":"IdentifierPath","referencedDeclaration":57826,"src":"159:18:275"},"id":57831,"nodeType":"InheritanceSpecifier","src":"159:18:275"}],"canonicalName":"IDropSinglePhase1155_V1","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[57889,57826],"name":"IDropSinglePhase1155_V1","nameLocation":"132:23:275","scope":57890,"usedErrors":[],"usedEvents":[57848,57858]}],"license":"Apache-2.0"},"id":275}