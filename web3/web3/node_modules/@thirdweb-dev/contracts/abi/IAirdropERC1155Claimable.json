{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"proofs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proofMaxQuantityForWallet","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,uint256,bytes32[],uint256)":"38524a10"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256,bytes32[],uint256)\":{\"params\":{\"proofMaxQuantityForWallet\":\"The maximum number of tokens an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of tokens to claim.\",\"receiver\":\"The receiver of the tokens to claim.\",\"tokenId\":\"Token Id to claim.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of ERC1155 tokens.\"}},\"notice\":\"Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism  to drop tokens.  `AirdropERC1155Claimable` contract is an airdrop contract for ERC1155 tokens. It follows a  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from  the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol\":\"IAirdropERC1155Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol\":{\"keccak256\":\"0x7726707c8cd61b54b3fcce390251aef2d250a4f8ea316758ecd879c38c3620fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://968b6a1f8ce7f4eff436be81577178bb85b5ceb77321f9201dcbec591426af46\",\"dweb:/ipfs/QmPoPDFwCcyaF25t9tgtJZG7smQ61HyVZRQFzxrEXLLnde\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityForWallet","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claim"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,uint256,bytes32[],uint256)":{"params":{"proofMaxQuantityForWallet":"The maximum number of tokens an address included in an                                        allowlist can claim.","proofs":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","quantity":"The quantity of tokens to claim.","receiver":"The receiver of the tokens to claim.","tokenId":"Token Id to claim."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,uint256,bytes32[],uint256)":{"notice":"Lets an account claim a given quantity of ERC1155 tokens."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol":"IAirdropERC1155Claimable"},"libraries":{}},"sources":{"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol":{"keccak256":"0x7726707c8cd61b54b3fcce390251aef2d250a4f8ea316758ecd879c38c3620fd","urls":["bzz-raw://968b6a1f8ce7f4eff436be81577178bb85b5ceb77321f9201dcbec591426af46","dweb:/ipfs/QmPoPDFwCcyaF25t9tgtJZG7smQ61HyVZRQFzxrEXLLnde"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/prebuilts/interface/airdrop/IAirdropERC1155Claimable.sol","id":76884,"exportedSymbols":{"IAirdropERC1155Claimable":[76883]},"nodeType":"SourceUnit","src":"39:1474:343","nodes":[{"id":76855,"nodeType":"PragmaDirective","src":"39:24:343","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":76883,"nodeType":"ContractDefinition","src":"387:1125:343","nodes":[{"id":76867,"nodeType":"EventDefinition","src":"474:159:343","nodes":[],"anonymous":false,"documentation":{"id":76857,"nodeType":"StructuredDocumentation","src":"428:41:343","text":"@dev Emitted when tokens are claimed."},"eventSelector":"ff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6","name":"TokensClaimed","nameLocation":"480:13:343","parameters":{"id":76866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76859,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"519:7:343","nodeType":"VariableDeclaration","scope":76867,"src":"503:23:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76858,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:343","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76861,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"552:8:343","nodeType":"VariableDeclaration","scope":76867,"src":"536:24:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76860,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:343","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76863,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"586:7:343","nodeType":"VariableDeclaration","scope":76867,"src":"570:23:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76862,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:343","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76865,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"611:15:343","nodeType":"VariableDeclaration","scope":76867,"src":"603:23:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76864,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:343","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"493:139:343"}},{"id":76882,"nodeType":"FunctionDefinition","src":"1325:185:343","nodes":[],"documentation":{"id":76868,"nodeType":"StructuredDocumentation","src":"639:681:343","text":"  @notice Lets an account claim a given quantity of ERC1155 tokens.\n  @param receiver                       The receiver of the tokens to claim.\n  @param quantity                       The quantity of tokens to claim.\n  @param tokenId                        Token Id to claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityForWallet      The maximum number of tokens an address included in an\n                                        allowlist can claim."},"functionSelector":"38524a10","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1334:5:343","parameters":{"id":76880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76870,"mutability":"mutable","name":"receiver","nameLocation":"1357:8:343","nodeType":"VariableDeclaration","scope":76882,"src":"1349:16:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76869,"name":"address","nodeType":"ElementaryTypeName","src":"1349:7:343","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76872,"mutability":"mutable","name":"quantity","nameLocation":"1383:8:343","nodeType":"VariableDeclaration","scope":76882,"src":"1375:16:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:343","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76874,"mutability":"mutable","name":"tokenId","nameLocation":"1409:7:343","nodeType":"VariableDeclaration","scope":76882,"src":"1401:15:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:343","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76877,"mutability":"mutable","name":"proofs","nameLocation":"1445:6:343","nodeType":"VariableDeclaration","scope":76882,"src":"1426:25:343","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":76875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1426:7:343","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":76876,"nodeType":"ArrayTypeName","src":"1426:9:343","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":76879,"mutability":"mutable","name":"proofMaxQuantityForWallet","nameLocation":"1469:25:343","nodeType":"VariableDeclaration","scope":76882,"src":"1461:33:343","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:343","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1339:161:343"},"returnParameters":{"id":76881,"nodeType":"ParameterList","parameters":[],"src":"1509:0:343"},"scope":76883,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAirdropERC1155Claimable","contractDependencies":[],"contractKind":"interface","documentation":{"id":76856,"nodeType":"StructuredDocumentation","src":"65:320:343","text":"  Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism\n  to drop tokens.\n  `AirdropERC1155Claimable` contract is an airdrop contract for ERC1155 tokens. It follows a\n  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from\n  the contract."},"fullyImplemented":false,"linearizedBaseContracts":[76883],"name":"IAirdropERC1155Claimable","nameLocation":"397:24:343","scope":76884,"usedErrors":[],"usedEvents":[76867]}],"license":"Apache-2.0"},"id":343}