{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfBatch","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"proofs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proofMaxQuantityPerTransaction","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lazyMint","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"baseURIForTokens","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeBatchTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setClaimConditions","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"phases","type":"tuple[]","internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetClaimEligibility","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ClaimConditionsUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claimConditions","type":"tuple[]","indexed":false,"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]}],"anonymous":false},{"type":"event","name":"MaxTotalSupplyUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"maxTotalSupply","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MaxWalletClaimCountUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"count","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SaleRecipientForTokenUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"saleRecipient","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimConditionIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokensLazyMinted","inputs":[{"name":"startTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"endTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"baseURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"TransferBatch","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"values","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"TransferSingle","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"URI","inputs":[{"name":"value","type":"string","indexed":false,"internalType":"string"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WalletClaimCountUpdated","inputs":[{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"wallet","type":"address","indexed":true,"internalType":"address"},{"name":"count","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","claim(address,uint256,uint256,address,uint256,bytes32[],uint256)":"b4c5faa1","isApprovedForAll(address,address)":"e985e9c5","lazyMint(uint256,string)":"47158264","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":"ab073c22","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"MaxTotalSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MaxWalletClaimCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleRecipient\",\"type\":\"address\"}],\"name\":\"SaleRecipientForTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"WalletClaimCountUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityPerTransaction\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURIForTokens\",\"type\":\"string\"}],\"name\":\"lazyMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDropClaimCondition_V2.ClaimCondition[]\",\"name\":\"phases\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"ClaimConditionsUpdated(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[])\":{\"details\":\"Emitted when new claim conditions are set for a token.\"},\"MaxTotalSupplyUpdated(uint256,uint256)\":{\"details\":\"Emitted when the global max supply of a token is updated.\"},\"MaxWalletClaimCountUpdated(uint256,uint256)\":{\"details\":\"Emitted when the max wallet claim count for a given tokenId is updated.\"},\"SaleRecipientForTokenUpdated(uint256,address)\":{\"details\":\"Emitted when the sale recipient for a particular tokenId is updated.\"},\"TokensClaimed(uint256,uint256,address,address,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"},\"TokensLazyMinted(uint256,uint256,string)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"WalletClaimCountUpdated(uint256,address,uint256)\":{\"details\":\"Emitted when the wallet claim count for a given tokenId and address is updated.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"claim(address,uint256,uint256,address,uint256,bytes32[],uint256)\":{\"params\":{\"currency\":\"The currency in which to pay for the claim.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"proofMaxQuantityPerTransaction\":\"(Optional) The maximum number of NFTs an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\",\"tokenId\":\"The unique ID of the token to claim.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"lazyMint(uint256,string)\":{\"params\":{\"amount\":\"The amount of NFTs to lazy mint.\",\"baseURIForTokens\":\"The URI for the NFTs to lazy mint.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)\":{\"params\":{\"phases\":\"Claim conditions in ascending order by `startTimestamp`.\",\"resetClaimEligibility\":\"Whether to reset `limitLastClaimTimestamp` and                               `limitMerkleProofClaim` values when setting new                               claim conditions.\",\"tokenId\":\"The token ID for which to set mint conditions.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256,address,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"lazyMint(uint256,string)\":{\"notice\":\"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\"},\"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"notice\":\"Thirdweb's 'Drop' contracts are distribution mechanisms for tokens. The  `DropERC721` contract is a distribution mechanism for ERC721 tokens.  A minter wallet (i.e. holder of `MINTER_ROLE`) can (lazy)mint 'n' tokens  at once by providing a single base URI for all tokens being lazy minted.  The URI for each of the 'n' tokens lazy minted is the provided base URI +  `{tokenId}` of the respective token. (e.g. \\\"ipsf://Qmece.../1\\\").  A minter can choose to lazy mint 'delayed-reveal' tokens. More on 'delayed-reveal'  tokens in [this article](https://blog.thirdweb.com/delayed-reveal-nfts).  A contract admin (i.e. holder of `DEFAULT_ADMIN_ROLE`) can create claim conditions  with non-overlapping time windows, and accounts can claim the tokens according to  restrictions defined in the claim condition that is active at the time of the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/interface/drop/IDropERC1155_V2.sol\":\"IDropERC1155_V2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol\":{\"keccak256\":\"0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3\",\"dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr\"]},\"contracts/legacy-contracts/interface/drop/IDropERC1155_V2.sol\":{\"keccak256\":\"0x776907a3f6a3bc3e7c9656bab7873e3811977cb020d9aae47c4863cc7c1648fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8beee3f57cb9f6e5a6f8f39ab77c3a9b5e8fb9d15ae0868661c48d655c50d9e8\",\"dweb:/ipfs/QmeyPwaW3161wtdTYnArhB1VoSVe4ayWSentAqkj4uH1ko\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol\":{\"keccak256\":\"0x07aab61872a5dd56d876a8d8f82f4cc063e74d16ec9f1eff100fcaee423b5de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399cf9ed2bce652a340c0336a2a426c88ad593aa989b4bb239d0ba44385d66a4\",\"dweb:/ipfs/QmVCKpLx1qJ16iMvjA2ZLT2b9iGRq3ybVQN3RxoUgwMwxn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","name":"claimConditions","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}],"indexed":false}],"type":"event","name":"ClaimConditionsUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"maxTotalSupply","type":"uint256","indexed":false}],"type":"event","name":"MaxTotalSupplyUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"count","type":"uint256","indexed":false}],"type":"event","name":"MaxWalletClaimCountUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"address","name":"saleRecipient","type":"address","indexed":false}],"type":"event","name":"SaleRecipientForTokenUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"claimConditionIndex","type":"uint256","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"endTokenId","type":"uint256","indexed":false},{"internalType":"string","name":"baseURI","type":"string","indexed":false}],"type":"event","name":"TokensLazyMinted","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256[]","name":"ids","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"values","type":"uint256[]","indexed":false}],"type":"event","name":"TransferBatch","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":false},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"TransferSingle","anonymous":false},{"inputs":[{"internalType":"string","name":"value","type":"string","indexed":false},{"internalType":"uint256","name":"id","type":"uint256","indexed":true}],"type":"event","name":"URI","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":true},{"internalType":"uint256","name":"count","type":"uint256","indexed":false}],"type":"event","name":"WalletClaimCountUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityPerTransaction","type":"uint256"}],"stateMutability":"payable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"baseURIForTokens","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"lazyMint"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeBatchTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"struct IDropClaimCondition_V2.ClaimCondition[]","name":"phases","type":"tuple[]","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}]},{"internalType":"bool","name":"resetClaimEligibility","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setClaimConditions"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"claim(address,uint256,uint256,address,uint256,bytes32[],uint256)":{"params":{"currency":"The currency in which to pay for the claim.","pricePerToken":"The price per token to pay for the claim.","proofMaxQuantityPerTransaction":"(Optional) The maximum number of NFTs an address included in an                                        allowlist can claim.","proofs":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","quantity":"The quantity of NFTs to claim.","receiver":"The receiver of the NFTs to claim.","tokenId":"The unique ID of the token to claim."}},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"lazyMint(uint256,string)":{"params":{"amount":"The amount of NFTs to lazy mint.","baseURIForTokens":"The URI for the NFTs to lazy mint."}},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":{"params":{"phases":"Claim conditions in ascending order by `startTimestamp`.","resetClaimEligibility":"Whether to reset `limitLastClaimTimestamp` and                               `limitMerkleProofClaim` values when setting new                               claim conditions.","tokenId":"The token ID for which to set mint conditions."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,uint256,address,uint256,bytes32[],uint256)":{"notice":"Lets an account claim a given quantity of NFTs."},"lazyMint(uint256,string)":{"notice":"Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`."},"setClaimConditions(uint256,(uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address)[],bool)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/interface/drop/IDropERC1155_V2.sol":"IDropERC1155_V2"},"libraries":{}},"sources":{"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol":{"keccak256":"0x4977fa771ecd5780111cfe22de9864e93e8a123713dd2683e00fa33db162f85a","urls":["bzz-raw://45813cd954a401458dadaca7ea86a808fb2641b37c02d161977c65af1f3116a3","dweb:/ipfs/QmfZBbdViSEE55zLY4NkMJHeMjwMje7bsiRPDvym7GcTLr"],"license":"Apache-2.0"},"contracts/legacy-contracts/interface/drop/IDropERC1155_V2.sol":{"keccak256":"0x776907a3f6a3bc3e7c9656bab7873e3811977cb020d9aae47c4863cc7c1648fc","urls":["bzz-raw://8beee3f57cb9f6e5a6f8f39ab77c3a9b5e8fb9d15ae0868661c48d655c50d9e8","dweb:/ipfs/QmeyPwaW3161wtdTYnArhB1VoSVe4ayWSentAqkj4uH1ko"],"license":"Apache-2.0"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol":{"keccak256":"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8","urls":["bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83","dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol":{"keccak256":"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09","urls":["bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758","dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/BitMapsUpgradeable.sol":{"keccak256":"0x07aab61872a5dd56d876a8d8f82f4cc063e74d16ec9f1eff100fcaee423b5de9","urls":["bzz-raw://399cf9ed2bce652a340c0336a2a426c88ad593aa989b4bb239d0ba44385d66a4","dweb:/ipfs/QmVCKpLx1qJ16iMvjA2ZLT2b9iGRq3ybVQN3RxoUgwMwxn"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/interface/drop/IDropERC1155_V2.sol","id":58193,"exportedSymbols":{"BitMapsUpgradeable":[165227],"IDropClaimCondition_V2":[58082],"IDropERC1155_V2":[58192],"IERC1155Upgradeable":[155651],"IERC165Upgradeable":[162577]},"nodeType":"SourceUnit","src":"39:4533:281","nodes":[{"id":58084,"nodeType":"PragmaDirective","src":"39:24:281","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":58085,"nodeType":"ImportDirective","src":"87:83:281","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol","nameLocation":"-1:-1:-1","scope":58193,"sourceUnit":155652,"symbolAliases":[],"unitAlias":""},{"id":58086,"nodeType":"ImportDirective","src":"171:38:281","nodes":[],"absolutePath":"contracts/legacy-contracts/interface/drop/IDropClaimCondition_V2.sol","file":"./IDropClaimCondition_V2.sol","nameLocation":"-1:-1:-1","scope":58193,"sourceUnit":58083,"symbolAliases":[],"unitAlias":""},{"id":58192,"nodeType":"ContractDefinition","src":"1111:3460:281","nodes":[{"id":58104,"nodeType":"EventDefinition","src":"1236:196:281","nodes":[],"anonymous":false,"documentation":{"id":58092,"nodeType":"StructuredDocumentation","src":"1190:41:281","text":"@dev Emitted when tokens are claimed."},"eventSelector":"4f72e6585331094d368e469f11198272039d08cbddfcda1577e192687a83afb6","name":"TokensClaimed","nameLocation":"1242:13:281","parameters":{"id":58103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58094,"indexed":true,"mutability":"mutable","name":"claimConditionIndex","nameLocation":"1281:19:281","nodeType":"VariableDeclaration","scope":58104,"src":"1265:35:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1265:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58096,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1326:7:281","nodeType":"VariableDeclaration","scope":58104,"src":"1310:23:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58098,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"1359:7:281","nodeType":"VariableDeclaration","scope":58104,"src":"1343:23:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58097,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58100,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1384:8:281","nodeType":"VariableDeclaration","scope":58104,"src":"1376:16:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58099,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58102,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"1410:15:281","nodeType":"VariableDeclaration","scope":58104,"src":"1402:23:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:176:281"}},{"id":58113,"nodeType":"EventDefinition","src":"1488:81:281","nodes":[],"anonymous":false,"documentation":{"id":58105,"nodeType":"StructuredDocumentation","src":"1438:45:281","text":"@dev Emitted when tokens are lazy minted."},"eventSelector":"4e6c698792b8dfb7c94c60c7e9e91f82932832d5e1ec0870ed42cf674e6af445","name":"TokensLazyMinted","nameLocation":"1494:16:281","parameters":{"id":58112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58107,"indexed":false,"mutability":"mutable","name":"startTokenId","nameLocation":"1519:12:281","nodeType":"VariableDeclaration","scope":58113,"src":"1511:20:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1511:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58109,"indexed":false,"mutability":"mutable","name":"endTokenId","nameLocation":"1541:10:281","nodeType":"VariableDeclaration","scope":58113,"src":"1533:18:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58111,"indexed":false,"mutability":"mutable","name":"baseURI","nameLocation":"1560:7:281","nodeType":"VariableDeclaration","scope":58113,"src":"1553:14:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58110,"name":"string","nodeType":"ElementaryTypeName","src":"1553:6:281","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1510:58:281"}},{"id":58122,"nodeType":"EventDefinition","src":"1643:88:281","nodes":[],"anonymous":false,"documentation":{"id":58114,"nodeType":"StructuredDocumentation","src":"1575:63:281","text":"@dev Emitted when new claim conditions are set for a token."},"eventSelector":"7822655b74d50f461cbd7ca5dfc8b5e48b21fa2157bd7d277888fccce85af2ae","name":"ClaimConditionsUpdated","nameLocation":"1649:22:281","parameters":{"id":58121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58116,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1688:7:281","nodeType":"VariableDeclaration","scope":58122,"src":"1672:23:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58120,"indexed":false,"mutability":"mutable","name":"claimConditions","nameLocation":"1714:15:281","nodeType":"VariableDeclaration","scope":58122,"src":"1697:32:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_memory_ptr_$dyn_memory_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"},"typeName":{"baseType":{"id":58118,"nodeType":"UserDefinedTypeName","pathNode":{"id":58117,"name":"ClaimCondition","nameLocations":["1697:14:281"],"nodeType":"IdentifierPath","referencedDeclaration":58059,"src":"1697:14:281"},"referencedDeclaration":58059,"src":"1697:14:281","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58059_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition"}},"id":58119,"nodeType":"ArrayTypeName","src":"1697:16:281","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_storage_$dyn_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"}},"visibility":"internal"}],"src":"1671:59:281"}},{"id":58129,"nodeType":"EventDefinition","src":"1808:69:281","nodes":[],"anonymous":false,"documentation":{"id":58123,"nodeType":"StructuredDocumentation","src":"1737:66:281","text":"@dev Emitted when the global max supply of a token is updated."},"eventSelector":"c58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd","name":"MaxTotalSupplyUpdated","nameLocation":"1814:21:281","parameters":{"id":58128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58125,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1844:7:281","nodeType":"VariableDeclaration","scope":58129,"src":"1836:15:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58127,"indexed":false,"mutability":"mutable","name":"maxTotalSupply","nameLocation":"1861:14:281","nodeType":"VariableDeclaration","scope":58129,"src":"1853:22:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1835:41:281"}},{"id":58138,"nodeType":"EventDefinition","src":"1976:86:281","nodes":[],"anonymous":false,"documentation":{"id":58130,"nodeType":"StructuredDocumentation","src":"1883:88:281","text":"@dev Emitted when the wallet claim count for a given tokenId and address is updated."},"eventSelector":"9260cdce30c9abdb65593c1a903e40c87feb886a28aa4335a6695547988aab2f","name":"WalletClaimCountUpdated","nameLocation":"1982:23:281","parameters":{"id":58137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58132,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2014:7:281","nodeType":"VariableDeclaration","scope":58138,"src":"2006:15:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2006:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58134,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"2039:6:281","nodeType":"VariableDeclaration","scope":58138,"src":"2023:22:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58133,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58136,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"2055:5:281","nodeType":"VariableDeclaration","scope":58138,"src":"2047:13:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2047:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2005:56:281"}},{"id":58145,"nodeType":"EventDefinition","src":"2153:65:281","nodes":[],"anonymous":false,"documentation":{"id":58139,"nodeType":"StructuredDocumentation","src":"2068:80:281","text":"@dev Emitted when the max wallet claim count for a given tokenId is updated."},"eventSelector":"07fa2d0eb2fe8b8e6fbee6073cf9d84659d6db054d221579a0373ae29bc9d73d","name":"MaxWalletClaimCountUpdated","nameLocation":"2159:26:281","parameters":{"id":58144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58141,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2194:7:281","nodeType":"VariableDeclaration","scope":58145,"src":"2186:15:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2186:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58143,"indexed":false,"mutability":"mutable","name":"count","nameLocation":"2211:5:281","nodeType":"VariableDeclaration","scope":58145,"src":"2203:13:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2185:32:281"}},{"id":58152,"nodeType":"EventDefinition","src":"2306:83:281","nodes":[],"anonymous":false,"documentation":{"id":58146,"nodeType":"StructuredDocumentation","src":"2224:77:281","text":"@dev Emitted when the sale recipient for a particular tokenId is updated."},"eventSelector":"359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b016","name":"SaleRecipientForTokenUpdated","nameLocation":"2312:28:281","parameters":{"id":58151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58148,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2357:7:281","nodeType":"VariableDeclaration","scope":58152,"src":"2341:23:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58150,"indexed":false,"mutability":"mutable","name":"saleRecipient","nameLocation":"2374:13:281","nodeType":"VariableDeclaration","scope":58152,"src":"2366:21:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58149,"name":"address","nodeType":"ElementaryTypeName","src":"2366:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:48:281"}},{"id":58160,"nodeType":"FunctionDefinition","src":"2712:77:281","nodes":[],"documentation":{"id":58153,"nodeType":"StructuredDocumentation","src":"2395:312:281","text":"  @notice Lets an account with `MINTER_ROLE` lazy mint 'n' NFTs.\n          The URIs for each token is the provided `_baseURIForTokens` + `{tokenId}`.\n  @param amount           The amount of NFTs to lazy mint.\n  @param baseURIForTokens The URI for the NFTs to lazy mint."},"functionSelector":"47158264","implemented":false,"kind":"function","modifiers":[],"name":"lazyMint","nameLocation":"2721:8:281","parameters":{"id":58158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58155,"mutability":"mutable","name":"amount","nameLocation":"2738:6:281","nodeType":"VariableDeclaration","scope":58160,"src":"2730:14:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58157,"mutability":"mutable","name":"baseURIForTokens","nameLocation":"2762:16:281","nodeType":"VariableDeclaration","scope":58160,"src":"2746:32:281","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":58156,"name":"string","nodeType":"ElementaryTypeName","src":"2746:6:281","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2729:50:281"},"returnParameters":{"id":58159,"nodeType":"ParameterList","parameters":[],"src":"2788:0:281"},"scope":58192,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":58179,"nodeType":"FunctionDefinition","src":"3671:255:281","nodes":[],"documentation":{"id":58161,"nodeType":"StructuredDocumentation","src":"2795:871:281","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param tokenId                       The unique ID of the token to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityPerTransaction (Optional) The maximum number of NFTs an address included in an\n                                        allowlist can claim."},"functionSelector":"b4c5faa1","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"3680:5:281","parameters":{"id":58177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58163,"mutability":"mutable","name":"receiver","nameLocation":"3703:8:281","nodeType":"VariableDeclaration","scope":58179,"src":"3695:16:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58162,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58165,"mutability":"mutable","name":"tokenId","nameLocation":"3729:7:281","nodeType":"VariableDeclaration","scope":58179,"src":"3721:15:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58167,"mutability":"mutable","name":"quantity","nameLocation":"3754:8:281","nodeType":"VariableDeclaration","scope":58179,"src":"3746:16:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58169,"mutability":"mutable","name":"currency","nameLocation":"3780:8:281","nodeType":"VariableDeclaration","scope":58179,"src":"3772:16:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58168,"name":"address","nodeType":"ElementaryTypeName","src":"3772:7:281","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58171,"mutability":"mutable","name":"pricePerToken","nameLocation":"3806:13:281","nodeType":"VariableDeclaration","scope":58179,"src":"3798:21:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3798:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58174,"mutability":"mutable","name":"proofs","nameLocation":"3848:6:281","nodeType":"VariableDeclaration","scope":58179,"src":"3829:25:281","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":58172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3829:7:281","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":58173,"nodeType":"ArrayTypeName","src":"3829:9:281","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":58176,"mutability":"mutable","name":"proofMaxQuantityPerTransaction","nameLocation":"3872:30:281","nodeType":"VariableDeclaration","scope":58179,"src":"3864:38:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58175,"name":"uint256","nodeType":"ElementaryTypeName","src":"3864:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3685:223:281"},"returnParameters":{"id":58178,"nodeType":"ParameterList","parameters":[],"src":"3925:0:281"},"scope":58192,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":58191,"nodeType":"FunctionDefinition","src":"4453:116:281","nodes":[],"documentation":{"id":58180,"nodeType":"StructuredDocumentation","src":"3932:516:281","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param tokenId               The token ID for which to set mint conditions.\n  @param phases                Claim conditions in ascending order by `startTimestamp`.\n  @param resetClaimEligibility Whether to reset `limitLastClaimTimestamp` and\n                               `limitMerkleProofClaim` values when setting new\n                               claim conditions."},"functionSelector":"ab073c22","implemented":false,"kind":"function","modifiers":[],"name":"setClaimConditions","nameLocation":"4462:18:281","parameters":{"id":58189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58182,"mutability":"mutable","name":"tokenId","nameLocation":"4489:7:281","nodeType":"VariableDeclaration","scope":58191,"src":"4481:15:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4481:7:281","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58186,"mutability":"mutable","name":"phases","nameLocation":"4524:6:281","nodeType":"VariableDeclaration","scope":58191,"src":"4498:32:281","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"},"typeName":{"baseType":{"id":58184,"nodeType":"UserDefinedTypeName","pathNode":{"id":58183,"name":"ClaimCondition","nameLocations":["4498:14:281"],"nodeType":"IdentifierPath","referencedDeclaration":58059,"src":"4498:14:281"},"referencedDeclaration":58059,"src":"4498:14:281","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58059_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition"}},"id":58185,"nodeType":"ArrayTypeName","src":"4498:16:281","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimCondition_$58059_storage_$dyn_storage_ptr","typeString":"struct IDropClaimCondition_V2.ClaimCondition[]"}},"visibility":"internal"},{"constant":false,"id":58188,"mutability":"mutable","name":"resetClaimEligibility","nameLocation":"4537:21:281","nodeType":"VariableDeclaration","scope":58191,"src":"4532:26:281","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58187,"name":"bool","nodeType":"ElementaryTypeName","src":"4532:4:281","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4480:79:281"},"returnParameters":{"id":58190,"nodeType":"ParameterList","parameters":[],"src":"4568:0:281"},"scope":58192,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":58088,"name":"IERC1155Upgradeable","nameLocations":["1140:19:281"],"nodeType":"IdentifierPath","referencedDeclaration":155651,"src":"1140:19:281"},"id":58089,"nodeType":"InheritanceSpecifier","src":"1140:19:281"},{"baseName":{"id":58090,"name":"IDropClaimCondition_V2","nameLocations":["1161:22:281"],"nodeType":"IdentifierPath","referencedDeclaration":58082,"src":"1161:22:281"},"id":58091,"nodeType":"InheritanceSpecifier","src":"1161:22:281"}],"canonicalName":"IDropERC1155_V2","contractDependencies":[],"contractKind":"interface","documentation":{"id":58087,"nodeType":"StructuredDocumentation","src":"211:898:281","text":"  Thirdweb's 'Drop' contracts are distribution mechanisms for tokens. The\n  `DropERC721` contract is a distribution mechanism for ERC721 tokens.\n  A minter wallet (i.e. holder of `MINTER_ROLE`) can (lazy)mint 'n' tokens\n  at once by providing a single base URI for all tokens being lazy minted.\n  The URI for each of the 'n' tokens lazy minted is the provided base URI +\n  `{tokenId}` of the respective token. (e.g. \"ipsf://Qmece.../1\").\n  A minter can choose to lazy mint 'delayed-reveal' tokens. More on 'delayed-reveal'\n  tokens in [this article](https://blog.thirdweb.com/delayed-reveal-nfts).\n  A contract admin (i.e. holder of `DEFAULT_ADMIN_ROLE`) can create claim conditions\n  with non-overlapping time windows, and accounts can claim the tokens according to\n  restrictions defined in the claim condition that is active at the time of the transaction."},"fullyImplemented":false,"linearizedBaseContracts":[58192,58082,155651,162577],"name":"IDropERC1155_V2","nameLocation":"1121:15:281","scope":58193,"usedErrors":[],"usedEvents":[58104,58113,58122,58129,58138,58145,58152,155548,155563,155572,155579]}],"license":"Apache-2.0"},"id":281}