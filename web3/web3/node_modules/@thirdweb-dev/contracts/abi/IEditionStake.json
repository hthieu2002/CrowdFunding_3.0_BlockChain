{"abi":[{"type":"function","name":"depositRewardTokens","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"withdrawRewardTokens","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RewardTokensDepositedByAdmin","inputs":[{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardTokensWithdrawnByAdmin","inputs":[{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"depositRewardTokens(uint256)":"16c621e0","withdrawRewardTokens(uint256)":"cb43b2dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensDepositedByAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokensWithdrawnByAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardTokensDepositedByAdmin(uint256)\":{\"details\":\"Emitted when contract admin deposits reward tokens.\"},\"RewardTokensWithdrawnByAdmin(uint256)\":{\"details\":\"Emitted when contract admin withdraws reward tokens.\"}},\"kind\":\"dev\",\"methods\":{\"depositRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}},\"withdrawRewardTokens(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing.\"},\"withdrawRewardTokens(uint256)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens.\"}},\"notice\":\"Thirdweb's EditionStake smart contract allows users to stake their ERC-1155 NFTs  and earn rewards in form of an ERC-20 token.  note:  - Reward token and staking token can't be changed after deployment.  - ERC1155 tokens from only the specified contract can be staked.  - All token/NFT transfers require approval on their respective contracts.  - Admin must deposit reward tokens using the `depositRewardTokens` function only.    Any direct transfers may cause unintended consequences, such as locking of tokens.  - Users must stake NFTs using the `stake` function only.    Any direct transfers may cause unintended consequences, such as locking of NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/staking/IEditionStake.sol\":\"IEditionStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/staking/IEditionStake.sol\":{\"keccak256\":\"0x0b1fd9cd477099dbe7ee0b612ace28583d37b5bfadde05555d389ece6d148a41\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d0722ec941e01dbbe6e29829bc629dc261c88356b9df397138d15aaa58925c0\",\"dweb:/ipfs/QmNxNBuzZ7HG72rKuq7uXM3zCtNpQcSK5AUvdDzL69QF4x\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"RewardTokensDepositedByAdmin","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"RewardTokensWithdrawnByAdmin","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"depositRewardTokens"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawRewardTokens"}],"devdoc":{"kind":"dev","methods":{"depositRewardTokens(uint256)":{"params":{"_amount":"Amount of tokens to deposit."}},"withdrawRewardTokens(uint256)":{"params":{"_amount":"Amount of tokens to deposit."}}},"version":1},"userdoc":{"kind":"user","methods":{"depositRewardTokens(uint256)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.          note: Tokens should be approved on the reward-token contract before depositing."},"withdrawRewardTokens(uint256)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.          Useful for removing excess balance, thus preventing locking of tokens."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prebuilts/interface/staking/IEditionStake.sol":"IEditionStake"},"libraries":{}},"sources":{"contracts/prebuilts/interface/staking/IEditionStake.sol":{"keccak256":"0x0b1fd9cd477099dbe7ee0b612ace28583d37b5bfadde05555d389ece6d148a41","urls":["bzz-raw://5d0722ec941e01dbbe6e29829bc629dc261c88356b9df397138d15aaa58925c0","dweb:/ipfs/QmNxNBuzZ7HG72rKuq7uXM3zCtNpQcSK5AUvdDzL69QF4x"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/prebuilts/interface/staking/IEditionStake.sol","id":77584,"exportedSymbols":{"IEditionStake":[77583]},"nodeType":"SourceUnit","src":"39:1684:353","nodes":[{"id":77559,"nodeType":"PragmaDirective","src":"39:24:353","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":77583,"nodeType":"ContractDefinition","src":"775:947:353","nodes":[{"id":77565,"nodeType":"EventDefinition","src":"871:52:353","nodes":[],"anonymous":false,"documentation":{"id":77561,"nodeType":"StructuredDocumentation","src":"805:61:353","text":"@dev Emitted when contract admin withdraws reward tokens."},"eventSelector":"37ff8766c704931c4283e470feb7c20ddcd8aa492746f74b30503709a0452acd","name":"RewardTokensWithdrawnByAdmin","nameLocation":"877:28:353","parameters":{"id":77564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77563,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"914:7:353","nodeType":"VariableDeclaration","scope":77565,"src":"906:15:353","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77562,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:353","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"905:17:353"}},{"id":77570,"nodeType":"EventDefinition","src":"994:52:353","nodes":[],"anonymous":false,"documentation":{"id":77566,"nodeType":"StructuredDocumentation","src":"929:60:353","text":"@dev Emitted when contract admin deposits reward tokens."},"eventSelector":"f9d14e57815939d300bc94720ede00c8c8e08d254ab28e2917ea46e149aa119b","name":"RewardTokensDepositedByAdmin","nameLocation":"1000:28:353","parameters":{"id":77569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77568,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"1037:7:353","nodeType":"VariableDeclaration","scope":77570,"src":"1029:15:353","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:353","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:17:353"}},{"id":77576,"nodeType":"FunctionDefinition","src":"1331:63:353","nodes":[],"documentation":{"id":77571,"nodeType":"StructuredDocumentation","src":"1052:274:353","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) deposit reward-tokens.\n          note: Tokens should be approved on the reward-token contract before depositing.\n  @param _amount     Amount of tokens to deposit."},"functionSelector":"16c621e0","implemented":false,"kind":"function","modifiers":[],"name":"depositRewardTokens","nameLocation":"1340:19:353","parameters":{"id":77574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77573,"mutability":"mutable","name":"_amount","nameLocation":"1368:7:353","nodeType":"VariableDeclaration","scope":77576,"src":"1360:15:353","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:353","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1359:17:353"},"returnParameters":{"id":77575,"nodeType":"ParameterList","parameters":[],"src":"1393:0:353"},"scope":77583,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":77582,"nodeType":"FunctionDefinition","src":"1664:56:353","nodes":[],"documentation":{"id":77577,"nodeType":"StructuredDocumentation","src":"1400:259:353","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) withdraw reward-tokens.\n          Useful for removing excess balance, thus preventing locking of tokens.\n  @param _amount     Amount of tokens to deposit."},"functionSelector":"cb43b2dd","implemented":false,"kind":"function","modifiers":[],"name":"withdrawRewardTokens","nameLocation":"1673:20:353","parameters":{"id":77580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77579,"mutability":"mutable","name":"_amount","nameLocation":"1702:7:353","nodeType":"VariableDeclaration","scope":77582,"src":"1694:15:353","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:353","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:17:353"},"returnParameters":{"id":77581,"nodeType":"ParameterList","parameters":[],"src":"1719:0:353"},"scope":77583,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IEditionStake","contractDependencies":[],"contractKind":"interface","documentation":{"id":77560,"nodeType":"StructuredDocumentation","src":"65:708:353","text":"  Thirdweb's EditionStake smart contract allows users to stake their ERC-1155 NFTs\n  and earn rewards in form of an ERC-20 token.\n  note:\n  - Reward token and staking token can't be changed after deployment.\n  - ERC1155 tokens from only the specified contract can be staked.\n  - All token/NFT transfers require approval on their respective contracts.\n  - Admin must deposit reward tokens using the `depositRewardTokens` function only.\n    Any direct transfers may cause unintended consequences, such as locking of tokens.\n  - Users must stake NFTs using the `stake` function only.\n    Any direct transfers may cause unintended consequences, such as locking of NFTs."},"fullyImplemented":false,"linearizedBaseContracts":[77583],"name":"IEditionStake","nameLocation":"785:13:353","scope":77584,"usedErrors":[],"usedEvents":[77565,77570]}],"license":"Apache-2.0"},"id":353}